public Class xmlEnvelopbuilder{

    public Static String request()
    {
        DOM.Document doc = new DOM.Document();
        dom.XmlNode inn= doc.createRootElement('in', null, null);
        dom.XmlNode AVOKA=inn.addChildElement('AVOKA', null, null);
        dom.XmlNode AvokaSmartForm=AVOKA.addChildElement('AvokaSmartForm', null, null);
AvokaSmartForm.addChildElement('Link', null, null);
AvokaSmartForm.addChildElement('Residentstate', null, null).addTextNode('Arizona (AZ)');
    AvokaSmartForm.addChildElement('Prodidnumber', null, null);
AvokaSmartForm.addChildElement('ProdSSNlast4', null, null);
dom.XmlNode WTextNameProducerFirstName=AvokaSmartForm.addChildElement('WTextNameProducerFirstName', null, null);
WTextNameProducerFirstName.addChildElement('AgentFName', null, null).addTextNode('James Dustin');
    
    AvokaSmartForm.addChildElement('AgentLName', null, null).addTextNode('James Dustin');
    AvokaSmartForm.addChildElement('AgentEmailAddress', null, null).addTextNode('divya.anandpara@genworth.com');
    AvokaSmartForm.addChildElement('AgentPhoneNumber', null, null).addTextNode('(434) 582-1900');
    AvokaSmartForm.addChildElement('AgentFaxNumber', null, null);
dom.XmlNode W=AvokaSmartForm.addChildElement('W', null, null);
dom.XmlNode GoogleAddressQAndA=W.addChildElement('GoogleAddressQAndA', null, null);
GoogleAddressQAndA.addChildElement('PleaseInputTheAddress', null, null);
GoogleAddressQAndA.addChildElement('Checkbox_1', null, null);
GoogleAddressQAndA.addChildElement('AgentAddressLine1', null, null);
GoogleAddressQAndA.addChildElement('AgentAddressLine2', null, null);
GoogleAddressQAndA.addChildElement('AgentCity', null, null);
GoogleAddressQAndA.addChildElement('AgentState', null, null);
GoogleAddressQAndA.addChildElement('AgentZipCode', null, null);
GoogleAddressQAndA.addChildElement('IsManualInput', null, null);
GoogleAddressQAndA.addChildElement('FullAddress', null, null);
dom.XmlNode Suburb=GoogleAddressQAndA.addChildElement('Suburb', null, null);
Suburb.addChildElement('City', null, null);
dom.XmlNode State=GoogleAddressQAndA.addChildElement('State', null, null);
State.addChildElement('Province', null, null);
dom.XmlNode Postcode=GoogleAddressQAndA.addChildElement('Postcode', null, null);
Postcode.addChildElement('Zipcode', null, null);
GoogleAddressQAndA.addChildElement('Country', null, null);
AvokaSmartForm.addChildElement('LicBGA', null, null);
AvokaSmartForm.addChildElement('Prodcodenum', null, null);
AvokaSmartForm.addChildElement('Haveabga', null, null);
AvokaSmartForm.addChildElement('BGAFName', null, null);
AvokaSmartForm.addChildElement('BGALName', null, null);
AvokaSmartForm.addChildElement('BGASuffix', null, null);
AvokaSmartForm.addChildElement('BGAOtherDet', null, null);
AvokaSmartForm.addChildElement('BgaEmailAddress', null, null);
AvokaSmartForm.addChildElement('EMPhone', null, null);
AvokaSmartForm.addChildElement('CMFax', null, null);
AvokaSmartForm.addChildElement('AvailableAffinityAssociations', null, null);
AvokaSmartForm.addChildElement('Splittingcomms', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('Commpercentage', null, null);
AvokaSmartForm.addChildElement('Content', null, null);
AvokaSmartForm.addChildElement('TotalCommission', null, null);
AvokaSmartForm.addChildElement('Listotherins', null, null);
AvokaSmartForm.addChildElement('Listotherins5years', null, null);
AvokaSmartForm.addChildElement('MultilineTextArea', null, null);
AvokaSmartForm.addChildElement('Listotherinsb', null, null);
AvokaSmartForm.addChildElement('Listotherins5yearb', null, null);
AvokaSmartForm.addChildElement('MultilineTextAreab', null, null);
AvokaSmartForm.addChildElement('DfPtnrshpDailyMinAmt', null, null);
AvokaSmartForm.addChildElement('DfPtnrshpMonthlyMinAmt', null, null);
AvokaSmartForm.addChildElement('DfINPtnrshpTotalAssetAmt', null, null);
AvokaSmartForm.addChildElement('DfPartnershipMinChangeYear', null, null);
AvokaSmartForm.addChildElement('DfResidentStateCode', null, null).addTextNode('AZ');
    AvokaSmartForm.addChildElement('DfResidentStateName', null, null).addTextNode('Arizona (AZ)');
    AvokaSmartForm.addChildElement('UserGUID', null, null).addTextNode('1111AE87-5B3E-0BED-9942-2B99CF4189DE');
    AvokaSmartForm.addChildElement('UserGivenName', null, null).addTextNode('James Dustin');
    AvokaSmartForm.addChildElement('UserFamilyName', null, null).addTextNode('James Dustin');
    AvokaSmartForm.addChildElement('UserEmail', null, null).addTextNode('divya.anandpara@genworth.com');
    AvokaSmartForm.addChildElement('DfSelectedProdID', null, null);
AvokaSmartForm.addChildElement('DfEnteredProdID', null, null);
AvokaSmartForm.addChildElement('DfCompanyCode', null, null);
AvokaSmartForm.addChildElement('DfEnteredBGANumber', null, null);
AvokaSmartForm.addChildElement('DfEnteredBGAName', null, null);
AvokaSmartForm.addChildElement('QNAFormType', null, null).addTextNode('M');
    AvokaSmartForm.addChildElement('DfProductCode', null, null).addTextNode('1');
    AvokaSmartForm.addChildElement('DfsfdcActivityId', null, null);
AvokaSmartForm.addChildElement('DfsfdcleadId', null, null);
AvokaSmartForm.addChildElement('DfsfdccontactId', null, null);
AvokaSmartForm.addChildElement('DfSfdcInputBlock', null, null);
AvokaSmartForm.addChildElement('DfOpportunityId', null, null);
AvokaSmartForm.addChildElement('DfSubmitKey', null, null);
AvokaSmartForm.addChildElement('AppInfoImportStatus', null, null);
AvokaSmartForm.addChildElement('ApplicationState', null, null).addTextNode('Arizona (AZ)');
    AvokaSmartForm.addChildElement('MaritalStatus', null, null).addTextNode('Single');
    AvokaSmartForm.addChildElement('SpouseApplying', null, null);
AvokaSmartForm.addChildElement('SharedCoverage', null, null);
AvokaSmartForm.addChildElement('GnwCoverage', null, null);
AvokaSmartForm.addChildElement('AffinityYesNo', null, null);
AvokaSmartForm.addChildElement('AffinityList', null, null);
dom.XmlNode Affinity=AvokaSmartForm.addChildElement('Affinity', null, null);
Affinity.addChildElement('Name', null, null);
Affinity.addChildElement('Number', null, null);
AvokaSmartForm.addChildElement('AppAFirstName', null, null).addTextNode('Testfn');
    AvokaSmartForm.addChildElement('AppAMiddleInitial', null, null);
AvokaSmartForm.addChildElement('AppALastName', null, null).addTextNode('Testln');
    AvokaSmartForm.addChildElement('AppAsuffix', null, null);
AvokaSmartForm.addChildElement('AppASuffixOtherDetails', null, null);
dom.XmlNode ApplicantADateOfBirth=AvokaSmartForm.addChildElement('ApplicantADateOfBirth', null, null);
ApplicantADateOfBirth.addChildElement('AppAmonth', null, null).addTextNode('06');
        ApplicantADateOfBirth.addChildElement('AppAday', null, null).addTextNode('13');
        ApplicantADateOfBirth.addChildElement('AppAyear', null, null).addTextNode('1973');
        ApplicantADateOfBirth.addChildElement('DfBirthDate', null, null).addTextNode('1973-06-13');
    AvokaSmartForm.addChildElement('AppAAttainedAge', null, null).addTextNode('49');
    AvokaSmartForm.addChildElement('AppAAgeCheckbox', null, null);
AvokaSmartForm.addChildElement('AppAAge', null, null).addTextNode('49');
    AvokaSmartForm.addChildElement('AppAGender', null, null).addTextNode('Male');
    dom.XmlNode AppBprefix=AvokaSmartForm.addChildElement('AppBprefix', null, null);
AppBprefix.addChildElement('TextName', null, null);
AvokaSmartForm.addChildElement('AppBFirstName', null, null);
AvokaSmartForm.addChildElement('AppBMiddleInitial', null, null);
AvokaSmartForm.addChildElement('AppBLastName', null, null);
AvokaSmartForm.addChildElement('AppBsuffix', null, null);
AvokaSmartForm.addChildElement('AppBSuffixOtherDetails', null, null);
dom.XmlNode ApplicantBDateOfBirth=AvokaSmartForm.addChildElement('ApplicantBDateOfBirth', null, null);
ApplicantBDateOfBirth.addChildElement('AppBmonth', null, null);
ApplicantBDateOfBirth.addChildElement('AppBday', null, null);
ApplicantBDateOfBirth.addChildElement('AppByear', null, null);
ApplicantBDateOfBirth.addChildElement('DfBirthDate', null, null);
AvokaSmartForm.addChildElement('AppBAttainedAge', null, null);
AvokaSmartForm.addChildElement('AppBAgeCheckbox', null, null);
AvokaSmartForm.addChildElement('AppBAge', null, null);
AvokaSmartForm.addChildElement('AppBGender', null, null);
AvokaSmartForm.addChildElement('DfSelectedAffinity', null, null);
AvokaSmartForm.addChildElement('DfAppASelectedPrefix', null, null);
AvokaSmartForm.addChildElement('DfAppBSelectedPrefix', null, null);
AvokaSmartForm.addChildElement('ChkElementSmall', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('ChkPCFlexSmall', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('ChkPartnershipSmall', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('ChkElement', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('ChkPCFlex', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('ChkPartnership', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('DfElementIndicator', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('DfCouplesDiscountIndicator', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('CboAppAPayMode', null, null).addTextNode('Monthly');
    AvokaSmartForm.addChildElement('ChkAppA25Plan', null, null);
AvokaSmartForm.addChildElement('ChkAppA50Plan', null, null);
AvokaSmartForm.addChildElement('ChkAppA75Plan', null, null);
AvokaSmartForm.addChildElement('ChkAppA100Plan', null, null);
AvokaSmartForm.addChildElement('CboAppBPayMode', null, null).addTextNode('Monthly');
    AvokaSmartForm.addChildElement('ChkAppB25Plan', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('ChkAppB50Plan', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('ChkAppB75Plan', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('ChkAppB100Plan', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('CboSharedPayMode', null, null).addTextNode('Monthly');
    AvokaSmartForm.addChildElement('ChkShared25Plan', null, null);
AvokaSmartForm.addChildElement('ChkShared50Plan', null, null);
AvokaSmartForm.addChildElement('ChkShared75Plan', null, null);
AvokaSmartForm.addChildElement('ChkShared100Plan', null, null);
AvokaSmartForm.addChildElement('AppA5PercReject', null, null);
AvokaSmartForm.addChildElement('AppB5PercReject', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('DfElementPlanA', null, null);
AvokaSmartForm.addChildElement('DfElementPlanB', null, null);
AvokaSmartForm.addChildElement('DfPmtModeAppA', null, null).addTextNode('Monthly');
    AvokaSmartForm.addChildElement('DfPmtModeAppB', null, null).addTextNode('Monthly');
    AvokaSmartForm.addChildElement('PartnershipQuotingOpts', null, null);
AvokaSmartForm.addChildElement('BenPayOptAppA', null, null).addTextNode('Monthly');
    AvokaSmartForm.addChildElement('BenPayOptAppB', null, null);
AvokaSmartForm.addChildElement('MonthlyDailyMaxAppA', null, null).addTextNode('1600');
    AvokaSmartForm.addChildElement('MonthlyDailyMaxAppB', null, null);
AvokaSmartForm.addChildElement('BenefitMultiplierAppA', null, null).addTextNode('48');
    AvokaSmartForm.addChildElement('BenefitMultiplierAppB', null, null);
AvokaSmartForm.addChildElement('ElimPeriodTypeAppA', null, null).addTextNode('Service');
    AvokaSmartForm.addChildElement('ElimPeriodTypeAppB', null, null);
AvokaSmartForm.addChildElement('ElimPeriodAppA', null, null).addTextNode('90');
    AvokaSmartForm.addChildElement('ElimPeriodAppB', null, null);
AvokaSmartForm.addChildElement('InfProtAppA', null, null).addTextNode('3% Compound');
    AvokaSmartForm.addChildElement('InfProtAppB', null, null);
AvokaSmartForm.addChildElement('HCCCPctAppA', null, null).addTextNode('100');
    AvokaSmartForm.addChildElement('HCCCPctAppB', null, null);
AvokaSmartForm.addChildElement('ALFPctAppA', null, null).addTextNode('100');
    AvokaSmartForm.addChildElement('ALFPctAppB', null, null);
AvokaSmartForm.addChildElement('WaiverOfPremiumAppA', null, null).addTextNode('Yes');
    AvokaSmartForm.addChildElement('WaiverOfPremiumAppB', null, null);
AvokaSmartForm.addChildElement('FirstDayHCElimPeriodAppA', null, null).addTextNode('Included');
    AvokaSmartForm.addChildElement('FirstDayHCElimPeriodAppB', null, null);
AvokaSmartForm.addChildElement('InfCareBenefitAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('InfCareBenefitAppB', null, null);
AvokaSmartForm.addChildElement('NfoAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('NfoAppB', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('MonHCMaxAndSupBenAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('MonHCMaxAndSupBenAppB', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('UnderwritingCatAppA', null, null).addTextNode('Standard');
    AvokaSmartForm.addChildElement('UnderwritingCatAppB', null, null);
AvokaSmartForm.addChildElement('PmtModeAppA', null, null).addTextNode('Monthly');
    AvokaSmartForm.addChildElement('PmtModeAppB', null, null);
AvokaSmartForm.addChildElement('FivePctCompRejectCustomizeAppA', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('FivePctCompRejectCustomizeAppB', null, null);
AvokaSmartForm.addChildElement('DfBPforPDFAppA', null, null).addTextNode('48*1460');
    AvokaSmartForm.addChildElement('DfBPforPDFAppB', null, null);
AvokaSmartForm.addChildElement('DfInfCareAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('DfInfCareAppB', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('DfMHCMSBRAppA', null, null);
AvokaSmartForm.addChildElement('DfMHCMSBRAppB', null, null);
AvokaSmartForm.addChildElement('DfPrtnrshpMentionAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('DfPrtnrshpMentionAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('DfAnnPremAppA', null, null).addTextNode('1019.2');
    AvokaSmartForm.addChildElement('DfSemiAnnPremAppA', null, null).addTextNode('519.79');
    AvokaSmartForm.addChildElement('DfQuarterlyPremAppA', null, null).addTextNode('264.99');
    AvokaSmartForm.addChildElement('DfMonPremAppA', null, null).addTextNode('91.73');
    AvokaSmartForm.addChildElement('DfAnnPremAppB', null, null);
AvokaSmartForm.addChildElement('DfSemiAnnPremAppB', null, null);
AvokaSmartForm.addChildElement('DfQuarterlyPremAppB', null, null);
AvokaSmartForm.addChildElement('DfMonPremAppB', null, null);
AvokaSmartForm.addChildElement('DfModalPremiumAppA', null, null).addTextNode('91.73');
    AvokaSmartForm.addChildElement('DfModalPremiumAppB', null, null).addTextNode('0');
    AvokaSmartForm.addChildElement('DfCombModalPremium', null, null).addTextNode('NaN');
    AvokaSmartForm.addChildElement('BaseIllustrationchk', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('IncludeAllchk', null, null);
AvokaSmartForm.addChildElement('UnderwritingPagechk', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('InfProtchk', null, null);
AvokaSmartForm.addChildElement('BreakEvenchk', null, null);
AvokaSmartForm.addChildElement('CostOfWaitingchk', null, null);
AvokaSmartForm.addChildElement('YnAppAAreYouMedicaid', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('YnAppBAreYouMedicaid', null, null);
AvokaSmartForm.addChildElement('YnAppASocialSecurityBenefits', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('YnAppBSocialSecurityBenefits', null, null);
dom.XmlNode AppADoYouUseAWalker=AvokaSmartForm.addChildElement('AppADoYouUseAWalker', null, null);
AppADoYouUseAWalker.addChildElement('WalkerAppA', null, null);
AppADoYouUseAWalker.addChildElement('MotorizedScooterAppA', null, null);
AppADoYouUseAWalker.addChildElement('StairLiftAppA', null, null);
AppADoYouUseAWalker.addChildElement('WheelchairOrAppA', null, null);
AppADoYouUseAWalker.addChildElement('QuadCaneAppA', null, null);
AppADoYouUseAWalker.addChildElement('HospitalBedAppA', null, null);
AppADoYouUseAWalker.addChildElement('OxygenAppA', null, null);
AppADoYouUseAWalker.addChildElement('RespiratorAppA', null, null);
AppADoYouUseAWalker.addChildElement('KidneyDialysisAppA', null, null);
AppADoYouUseAWalker.addChildElement('AssistanceBedOrChairAppA', null, null);
AppADoYouUseAWalker.addChildElement('AssistancebathingAppA', null, null);
AppADoYouUseAWalker.addChildElement('AssistancedressingAppA', null, null);
AppADoYouUseAWalker.addChildElement('AssistanceeatingAppA', null, null);
AppADoYouUseAWalker.addChildElement('AssistancetoiletingAppA', null, null);
AppADoYouUseAWalker.addChildElement('AssistancebowelcontrolAppA', null, null);
AppADoYouUseAWalker.addChildElement('AssistancewalkingAppA', null, null);
AppADoYouUseAWalker.addChildElement('NoneApplyAssistanceAppA', null, null).addTextNode('true');
    dom.XmlNode AppBDoYouUseAWalker=AvokaSmartForm.addChildElement('AppBDoYouUseAWalker', null, null);
AppBDoYouUseAWalker.addChildElement('WalkerAppB', null, null);
AppBDoYouUseAWalker.addChildElement('MotorizedScooterAppB', null, null);
AppBDoYouUseAWalker.addChildElement('StairLiftAppB', null, null);
AppBDoYouUseAWalker.addChildElement('WheelchairOrAppB', null, null);
AppBDoYouUseAWalker.addChildElement('QuadCaneAppB', null, null);
AppBDoYouUseAWalker.addChildElement('HospitalBedAppB', null, null);
AppBDoYouUseAWalker.addChildElement('OxygenAppB', null, null);
AppBDoYouUseAWalker.addChildElement('RespiratorAppB', null, null);
AppBDoYouUseAWalker.addChildElement('KidneyDialysisAppB', null, null);
AppBDoYouUseAWalker.addChildElement('AssistanceBedOrChairAppB', null, null);
AppBDoYouUseAWalker.addChildElement('AssistancebathingAppB', null, null);
AppBDoYouUseAWalker.addChildElement('AssistancedressingAppB', null, null);
AppBDoYouUseAWalker.addChildElement('AssistanceeatingAppB', null, null);
AppBDoYouUseAWalker.addChildElement('AssistancetoiletingAppB', null, null);
AppBDoYouUseAWalker.addChildElement('AssistancebowelcontrolAppB', null, null);
AppBDoYouUseAWalker.addChildElement('AssistancewalkingAppB', null, null);
AppBDoYouUseAWalker.addChildElement('NoneApplyAssistanceAppB', null, null);
AvokaSmartForm.addChildElement('YnAppADoYouCurrentlyResideIn', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('YnAppBDoYouCurrentlyResideIn', null, null);
dom.XmlNode AppAListofConditions=AvokaSmartForm.addChildElement('AppAListofConditions', null, null);
AppAListofConditions.addChildElement('AlzheimersDiseaseAppA', null, null);
AppAListofConditions.addChildElement('AmyotrophicLateralSclerosisAppA', null, null);
AppAListofConditions.addChildElement('BipolarDisorderAppA', null, null);
AppAListofConditions.addChildElement('CirrhosisOfTheLiverAppA', null, null);
AppAListofConditions.addChildElement('CongestiveHeartFailureAppA', null, null);
AppAListofConditions.addChildElement('CysticFibrosisAppA', null, null);
AppAListofConditions.addChildElement('DementiaAppA', null, null);
AppAListofConditions.addChildElement('DiabetesUnderTreatmentAppA', null, null);
AppAListofConditions.addChildElement('EhlersDanlosSyndromeAppA', null, null);
AppAListofConditions.addChildElement('FrequentOrPersistentForgetfulnessAppA', null, null);
AppAListofConditions.addChildElement('HuntingtonsDiseaseAppA', null, null);
AppAListofConditions.addChildElement('MarfansSyndromeAppA', null, null);
AppAListofConditions.addChildElement('MetastaticCancerAppA', null, null);
AppAListofConditions.addChildElement('MultipleSclerosisAppA', null, null);
AppAListofConditions.addChildElement('MuscularDystrophyAppA', null, null);
AppAListofConditions.addChildElement('MyelofibrosisAppA', null, null);
AppAListofConditions.addChildElement('OrganTransplantAppA', null, null);
AppAListofConditions.addChildElement('ParkinsonsDiseaseAppA', null, null);
AppAListofConditions.addChildElement('SchizophreniaAppA', null, null);
AppAListofConditions.addChildElement('SenilityAppA', null, null);
AppAListofConditions.addChildElement('StrokeAppA', null, null);
AppAListofConditions.addChildElement('TransientIschemicAttackTIAwithinthepast5yearsAppA', null, null);
AppAListofConditions.addChildElement('TIAincombinationwithHeartDiseaseorHeartSurgeryAppA', null, null);
AppAListofConditions.addChildElement('TIAtwoormoretimesAppA', null, null);
AppAListofConditions.addChildElement('NoneApplyAppA', null, null).addTextNode('true');
    dom.XmlNode AppBListofConditions=AvokaSmartForm.addChildElement('AppBListofConditions', null, null);
AppBListofConditions.addChildElement('AlzheimersDiseaseAppB', null, null);
AppBListofConditions.addChildElement('AmyotrophicLateralSclerosisAppB', null, null);
AppBListofConditions.addChildElement('BipolarDisorderAppB', null, null);
AppBListofConditions.addChildElement('CirrhosisOfTheLiverAppB', null, null);
AppBListofConditions.addChildElement('CongestiveHeartFailureAppB', null, null);
AppBListofConditions.addChildElement('CysticFibrosisAppB', null, null);
AppBListofConditions.addChildElement('DementiaAppB', null, null);
AppBListofConditions.addChildElement('DiabetesUnderTreatmentAppB', null, null);
AppBListofConditions.addChildElement('EhlersDanlosSyndromeAppB', null, null);
AppBListofConditions.addChildElement('FrequentOrPersistentForgetfulnessAppB', null, null);
AppBListofConditions.addChildElement('HuntingtonsDiseaseAppB', null, null);
AppBListofConditions.addChildElement('MarfansSyndromeAppB', null, null);
AppBListofConditions.addChildElement('MetastaticCancerAppB', null, null);
AppBListofConditions.addChildElement('MultipleSclerosisAppB', null, null);
AppBListofConditions.addChildElement('MuscularDystrophyAppB', null, null);
AppBListofConditions.addChildElement('MyelofibrosisAppB', null, null);
AppBListofConditions.addChildElement('OrganTransplantAppB', null, null);
AppBListofConditions.addChildElement('ParkinsonsDiseaseAppB', null, null);
AppBListofConditions.addChildElement('SchizophreniaAppB', null, null);
AppBListofConditions.addChildElement('SenilityAppB', null, null);
AppBListofConditions.addChildElement('StrokeAppB', null, null);
AppBListofConditions.addChildElement('TransientIschemicAttackTIAwithinthepast5yearsAppB', null, null);
AppBListofConditions.addChildElement('TIAincombinationwithHeartDiseaseorHeartSurgeryAppB', null, null);
AppBListofConditions.addChildElement('TIAtwoormoretimesAppB', null, null);
AppBListofConditions.addChildElement('NoneApplyAppB', null, null);
dom.XmlNode AppAInThePast4YearsHave=AvokaSmartForm.addChildElement('AppAInThePast4YearsHave', null, null);
AppAInThePast4YearsHave.addChildElement('BrainAppA', null, null);
AppAInThePast4YearsHave.addChildElement('EsophagusAppA', null, null);
AppAInThePast4YearsHave.addChildElement('LiverAppA', null, null);
AppAInThePast4YearsHave.addChildElement('OvaryAppA', null, null);
AppAInThePast4YearsHave.addChildElement('PancreasAppA', null, null);
AppAInThePast4YearsHave.addChildElement('StomachAppA', null, null);
AppAInThePast4YearsHave.addChildElement('NoneApplyCancerAppA', null, null).addTextNode('true');
    dom.XmlNode AppBInThePast4YearsHave=AvokaSmartForm.addChildElement('AppBInThePast4YearsHave', null, null);
AppBInThePast4YearsHave.addChildElement('BrainAppB', null, null);
AppBInThePast4YearsHave.addChildElement('EsophagusAppB', null, null);
AppBInThePast4YearsHave.addChildElement('LiverAppB', null, null);
AppBInThePast4YearsHave.addChildElement('OvaryAppB', null, null);
AppBInThePast4YearsHave.addChildElement('PancreasAppB', null, null);
AppBInThePast4YearsHave.addChildElement('StomachAppB', null, null);
AppBInThePast4YearsHave.addChildElement('NoneApplyCancerAppB', null, null);
AvokaSmartForm.addChildElement('YnAppAHaveYouEverBeenDiagnosed', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('YnAppBHaveYouEverBeenDiagnosed', null, null);
AvokaSmartForm.addChildElement('AppAAcknowledgement', null, null);
AvokaSmartForm.addChildElement('AppBAcknowledgement', null, null);
AvokaSmartForm.addChildElement('YnAppATobacco', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppATypeofProduct', null, null);
AvokaSmartForm.addChildElement('AppAOtherProductDetailsTobacco', null, null);
AvokaSmartForm.addChildElement('AppAFrequency', null, null);
AvokaSmartForm.addChildElement('AppAFrequencyText', null, null);
AvokaSmartForm.addChildElement('AppADateLastUsed', null, null);
AvokaSmartForm.addChildElement('YnAppBTobacco', null, null);
AvokaSmartForm.addChildElement('AppBTypeofProduct', null, null);
AvokaSmartForm.addChildElement('AppBOtherProductDetailsTobacco', null, null);
AvokaSmartForm.addChildElement('AppBFrequency', null, null);
AvokaSmartForm.addChildElement('AppBFrequencyText', null, null);
AvokaSmartForm.addChildElement('AppBDateLastUsed', null, null);
AvokaSmartForm.addChildElement('YnAppAWorkOutside', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppAOccupationEmployed', null, null);
AvokaSmartForm.addChildElement('AppAPleaseDescribeWork', null, null);
AvokaSmartForm.addChildElement('YnAppBWorkOutside', null, null);
AvokaSmartForm.addChildElement('AppBOccupationEmployed', null, null);
AvokaSmartForm.addChildElement('AppBPleaseDescribeWork', null, null);
AvokaSmartForm.addChildElement('YnAppPerformVolunteer', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppATypeofWork', null, null);
AvokaSmartForm.addChildElement('AppAHoursPerWeek', null, null);
AvokaSmartForm.addChildElement('YnAppBPerformVolunteer', null, null);
AvokaSmartForm.addChildElement('AppBTypeofWork', null, null);
AvokaSmartForm.addChildElement('AppBHoursPerWeek', null, null);
AvokaSmartForm.addChildElement('YnAppAHobbies', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppAActivitiesGLIC', null, null);
AvokaSmartForm.addChildElement('YnAppBHobbies', null, null);
AvokaSmartForm.addChildElement('AppBActivitiesGLIC', null, null);
AvokaSmartForm.addChildElement('YnAppADriveAuto', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppAProvideAppox', null, null);
AvokaSmartForm.addChildElement('YnAppBDriveAuto', null, null);
AvokaSmartForm.addChildElement('AppBProvideAppox', null, null);
AvokaSmartForm.addChildElement('YnAppARetireComm', null, null).addTextNode('No');
    dom.XmlNode AppAServicesUsed=AvokaSmartForm.addChildElement('AppAServicesUsed', null, null);
AppAServicesUsed.addChildElement('AppABathing', null, null);
AppAServicesUsed.addChildElement('AppACleaning', null, null);
AppAServicesUsed.addChildElement('AppACooking', null, null);
AppAServicesUsed.addChildElement('AppADressing', null, null);
AppAServicesUsed.addChildElement('AppADriving', null, null);
AppAServicesUsed.addChildElement('AppAFeeding', null, null);
AppAServicesUsed.addChildElement('AppAHelpFinances', null, null);
AppAServicesUsed.addChildElement('AppAHelpLaundry', null, null);
AppAServicesUsed.addChildElement('AppAHelpMeds', null, null);
AppAServicesUsed.addChildElement('AppAInsideMobility', null, null);
AppAServicesUsed.addChildElement('AppAOutsideMobility', null, null);
AppAServicesUsed.addChildElement('AppAShopping', null, null);
AppAServicesUsed.addChildElement('AppAToileting', null, null);
AppAServicesUsed.addChildElement('AppATransferring', null, null);
AppAServicesUsed.addChildElement('AppAOther', null, null);
AppAServicesUsed.addChildElement('AppANone', null, null);
AvokaSmartForm.addChildElement('AppAProvideDetailsResident', null, null);
AvokaSmartForm.addChildElement('YnAppBRetireComm', null, null);
dom.XmlNode AppBServicesUsed=AvokaSmartForm.addChildElement('AppBServicesUsed', null, null);
AppBServicesUsed.addChildElement('AppBBathing', null, null);
AppBServicesUsed.addChildElement('AppBCleaning', null, null);
AppBServicesUsed.addChildElement('AppBCooking', null, null);
AppBServicesUsed.addChildElement('AppBDressing', null, null);
AppBServicesUsed.addChildElement('AppBDriving', null, null);
AppBServicesUsed.addChildElement('AppBFeeding', null, null);
AppBServicesUsed.addChildElement('AppBHelpFinances', null, null);
AppBServicesUsed.addChildElement('AppBHelpLaundry', null, null);
AppBServicesUsed.addChildElement('AppBHelpMeds', null, null);
AppBServicesUsed.addChildElement('AppBInsideMobility', null, null);
AppBServicesUsed.addChildElement('AppBOutsideMobility', null, null);
AppBServicesUsed.addChildElement('AppBShopping', null, null);
AppBServicesUsed.addChildElement('AppBToileting', null, null);
AppBServicesUsed.addChildElement('AppBTransferring', null, null);
AppBServicesUsed.addChildElement('AppBOther', null, null);
AppBServicesUsed.addChildElement('AppBNone', null, null);
AvokaSmartForm.addChildElement('AppBProvideDetailsResident', null, null);
AvokaSmartForm.addChildElement('DfAppAServicesSelected', null, null);
AvokaSmartForm.addChildElement('DfAppBServicesSelected', null, null);
AvokaSmartForm.addChildElement('YNSeenPCPAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('PCPNameAppA', null, null);
dom.XmlNode Please=AvokaSmartForm.addChildElement('Please', null, null);
dom.XmlNode Input=Please.addChildElement('Input', null, null);
dom.XmlNode The=Input.addChildElement('The', null, null);
The.addChildElement('Address_13', null, null);
The.addChildElement('Address_15', null, null);
The.addChildElement('Address', null, null).addTextNode('Yes');
                dom.XmlNode Mailing=The.addChildElement('Mailing', null, null);
Mailing.addChildElement('Address_1', null, null);
AvokaSmartForm.addChildElement('Checkbox_9', null, null);
AvokaSmartForm.addChildElement('PCPAddr1AppA', null, null);
AvokaSmartForm.addChildElement('PCPAddr2AppA', null, null);
AvokaSmartForm.addChildElement('PCPCityAppA', null, null);
AvokaSmartForm.addChildElement('PCPStateAppA', null, null);
AvokaSmartForm.addChildElement('PCPZipCodeAppA', null, null);
dom.XmlNode Is=AvokaSmartForm.addChildElement('Is', null, null);
dom.XmlNode Manual=Is.addChildElement('Manual', null, null);
Manual.addChildElement('Input_11', null, null);
Manual.addChildElement('Input_12', null, null);
dom.XmlNode Full=AvokaSmartForm.addChildElement('Full', null, null);
Full.addChildElement('Address_11', null, null);
Full.addChildElement('Address_12', null, null);
AvokaSmartForm.addChildElement('PhoneNumberPCPAppA', null, null);
AvokaSmartForm.addChildElement('ReasonLastSeenAppA', null, null);
AvokaSmartForm.addChildElement('DateLastSeenAppA', null, null);
AvokaSmartForm.addChildElement('DateRangePCPAppA', null, null);
AvokaSmartForm.addChildElement('OtherDetailsPCPDateRangeAppA', null, null);
AvokaSmartForm.addChildElement('AnginaAppAGIC', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAnginaChestPainsDetailsAppA', null, null);
AvokaSmartForm.addChildElement('AnginaAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAngineDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ChestPainsAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalChestPainsDetailsAppA', null, null);
AvokaSmartForm.addChildElement('HeartAttackAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHeartAttackDetailsAppA', null, null);
AvokaSmartForm.addChildElement('HeartDiseaseDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHeartDiseaseDetailsAppA', null, null);
AvokaSmartForm.addChildElement('HeartMurmurAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalMurmurDetailsAppA', null, null);
AvokaSmartForm.addChildElement('HighBloodPressureAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHBPDetailsAppA', null, null);
AvokaSmartForm.addChildElement('IrregularHeartbeatPalpitationsAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalPalpitationsDetailsAppA', null, null);
AvokaSmartForm.addChildElement('PeripheralVascularAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalPVDDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ColitisorCrohnsDiseaseAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalColitisDetailsAppA', null, null);
AvokaSmartForm.addChildElement('EsophagusDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalEsophagusDetailsAppA', null, null);
AvokaSmartForm.addChildElement('HepatitisAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHepatitisDetailsAppA', null, null);
AvokaSmartForm.addChildElement('IntestinalDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalIntestinalDetailsAppA', null, null);
AvokaSmartForm.addChildElement('LiverDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalLiverDetailsAppA', null, null);
AvokaSmartForm.addChildElement('PancreatitisAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalPancreatitisDetailsAppA', null, null);
AvokaSmartForm.addChildElement('StomachDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalStomachDetailsAppA', null, null);
AvokaSmartForm.addChildElement('WeightLossProcedureAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalWeightLossDetailsAppA', null, null);
AvokaSmartForm.addChildElement('DiabetesAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalDiabetesDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ThyroidDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalThyroidDetailsAppA', null, null);
AvokaSmartForm.addChildElement('CancerAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalCancerDetailsAppA', null, null);
AvokaSmartForm.addChildElement('LeukemiaorLymphomaAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalLeukemiaDetailsAppA', null, null);
AvokaSmartForm.addChildElement('TumorAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalTumorDetailsAppA', null, null);
AvokaSmartForm.addChildElement('AsthmaAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAsthmaDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ChronicBronchitisAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalCOPDDetailsAppA', null, null);
AvokaSmartForm.addChildElement('CysticFibrosisAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalCysticFibrosisDetailsAppA', null, null);
AvokaSmartForm.addChildElement('SleepApneaAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalSleepApneaDetailsAppA', null, null);
AvokaSmartForm.addChildElement('BloodDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBloodDetailsAppA', null, null);
AvokaSmartForm.addChildElement('MacularDegenerationAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalMacularDetailsAppA', null, null);
AvokaSmartForm.addChildElement('BipolarDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBipolarDetailsAppA', null, null);
AvokaSmartForm.addChildElement('DepressionAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalDepressionDetailsAppA', null, null);
AvokaSmartForm.addChildElement('OtherMentalAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalOtherMentalDetailsAppA', null, null);
AvokaSmartForm.addChildElement('BladderDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBladderDetailsAppA', null, null);
AvokaSmartForm.addChildElement('KidneyDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalKidneyDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ProstateDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalProstateDetailsAppA', null, null);
AvokaSmartForm.addChildElement('AmputationAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAmputationDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ArthritisAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalArthritisDetailsAppA', null, null);
AvokaSmartForm.addChildElement('BackSpineorNeckDisorderAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBackDisorderDetailsAppA', null, null);
AvokaSmartForm.addChildElement('FibromyalgiaAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBoneDisorderDetailsAppA', null, null);
AvokaSmartForm.addChildElement('OsteoporosisOsteopeniaAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalOsteoporosisDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ALSAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalALSDetailsAppA', null, null);
AvokaSmartForm.addChildElement('AlzheimersDiseaseAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAlzheimersDetailsAppA', null, null);
AvokaSmartForm.addChildElement('BrainorNervousSystemAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBrainDisorderDetailsAppA', null, null);
AvokaSmartForm.addChildElement('HuntingtonsDiseaseAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHuntingtonDetailsAppA', null, null);
AvokaSmartForm.addChildElement('InjuryduetofallsorimbalanceAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalFallInjuryDetailsAppA', null, null);
AvokaSmartForm.addChildElement('MultipleSclerosisAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalMSDetailsAppA', null, null);
AvokaSmartForm.addChildElement('MuscularDystrophyAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalDystrophyDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ParalysisAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalParalysisDetailsAppA', null, null);
AvokaSmartForm.addChildElement('ParkinsonsDiseaseAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalParkinsonDetailsAppA', null, null);
AvokaSmartForm.addChildElement('PostPolioSyndromeAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalPostPolioDetailsAppA', null, null);
AvokaSmartForm.addChildElement('SeizuresConvulsionsorFaintingAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalSeizuresDetailsAppA', null, null);
AvokaSmartForm.addChildElement('TIAAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalTIADetailsAppA', null, null);
AvokaSmartForm.addChildElement('AIDSAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHIVAIDSDetailsAppA', null, null);
AvokaSmartForm.addChildElement('LupusAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalLupusDetailsAppA', null, null);
AvokaSmartForm.addChildElement('OrganTransplantAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalOrganDetailsAppA', null, null);
AvokaSmartForm.addChildElement('OtherconditionsAppA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalOtherConditionsDetailsAppA', null, null);
AvokaSmartForm.addChildElement('NoneApplyAppA_1', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('YNDiagnosticTestAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('DiagnosticTestDetailsAppA', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslyHospitalAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('OtherThanPreviouslyHospitalDetailsAppA', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslyIllnessAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('OtherThanPreviouslyIllnessDetailsAppA', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslySurgeryAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('OtherThanPreviouslySurgeryDetailsAppA', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslyMedsAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('OtherThanPreviouslyMedsDetailsAppA', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslyFacilityAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('OtherThanPreviouslyFacilityDetailsAppA', null, null);
AvokaSmartForm.addChildElement('WorkersCompensationAppA', null, null);
AvokaSmartForm.addChildElement('OtherDisabilityIncomeAppA', null, null);
AvokaSmartForm.addChildElement('NoneApplyDisabilityAppA', null, null).addTextNode('true');
    dom.XmlNode AppAWorkersComp=AvokaSmartForm.addChildElement('AppAWorkersComp', null, null);
AppAWorkersComp.addChildElement('BriefdescriptionofdisabilityAppA', null, null);
AppAWorkersComp.addChildElement('FromDateAppA', null, null);
AppAWorkersComp.addChildElement('DateFromRangeDisabilityAppA', null, null);
AppAWorkersComp.addChildElement('OtherDetailsFromDateDateRangeAppA', null, null);
AppAWorkersComp.addChildElement('ToDateAppA', null, null);
AppAWorkersComp.addChildElement('DateToRangeDisabilityAppA', null, null);
AppAWorkersComp.addChildElement('OtherDetailsToDateDateRangeAppA', null, null);
dom.XmlNode AppAOtherDisabilityIncome=AvokaSmartForm.addChildElement('AppAOtherDisabilityIncome', null, null);
AppAOtherDisabilityIncome.addChildElement('BriefdescriptionofincomeAppA', null, null);
AppAOtherDisabilityIncome.addChildElement('FromDateIncomeAppA', null, null);
AppAOtherDisabilityIncome.addChildElement('DateFromRangeIncomeAppA', null, null);
AppAOtherDisabilityIncome.addChildElement('OtherDetailsFromDateRangeIncomeAppA', null, null);
AppAOtherDisabilityIncome.addChildElement('ToDateIncomeAppA', null, null);
AppAOtherDisabilityIncome.addChildElement('DateToRangeIncomeAppA', null, null);
AppAOtherDisabilityIncome.addChildElement('OtherDetailsToDateRangeIncomeAppA', null, null);
AvokaSmartForm.addChildElement('HeightAppA', null, null).addTextNode('5');
    AvokaSmartForm.addChildElement('WeightlbsAppA', null, null).addTextNode('222');
    AvokaSmartForm.addChildElement('YNLostGainedAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('WastheweightlostorgainedAppA', null, null);
AvokaSmartForm.addChildElement('HowmanypoundsAppA', null, null);
AvokaSmartForm.addChildElement('YNDietExerciseAppAICC', null, null);
AvokaSmartForm.addChildElement('YNChangeIntentionalAppANonICC', null, null);
AvokaSmartForm.addChildElement('WeightChangeCauseAppANonICC', null, null);
AvokaSmartForm.addChildElement('YNCurrentlyPregnantAppA', null, null);
AvokaSmartForm.addChildElement('WhatisyourduedateAppA', null, null);
AvokaSmartForm.addChildElement('AmountofweightgainedAppA', null, null);
AvokaSmartForm.addChildElement('YNDrinkAlcoholAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('YNEverUsedAlcoholAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('DateoflastuseAppA', null, null);
AvokaSmartForm.addChildElement('DateRangeAlcoholAppA', null, null);
AvokaSmartForm.addChildElement('OtherDetailsAlcoholDateRangeAppA', null, null);
AvokaSmartForm.addChildElement('ReasonforquittingAppA', null, null);
AvokaSmartForm.addChildElement('WhattypeAppA', null, null);
AvokaSmartForm.addChildElement('OtherDetailsAppA', null, null);
AvokaSmartForm.addChildElement('FrequencyandAmountAppA', null, null);
AvokaSmartForm.addChildElement('YNAdvisedToQuitAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AdvisedToQuitDetailsAppA', null, null);
AvokaSmartForm.addChildElement('YNAdvisedAlcoholCounselingAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AdvisedAlcoholCounselingDetailsAppA', null, null);
AvokaSmartForm.addChildElement('YNSubstanceHistoryAppA', null, null).addTextNode('No');
    dom.XmlNode SubstanceDetailsAppA=AvokaSmartForm.addChildElement('SubstanceDetailsAppA', null, null);
SubstanceDetailsAppA.addChildElement('NameofSubstanceAppA', null, null);
SubstanceDetailsAppA.addChildElement('DateLastUsedSubstanceAppA', null, null);
SubstanceDetailsAppA.addChildElement('DateRangeSubstanceAppA', null, null);
SubstanceDetailsAppA.addChildElement('OtherDetailsSubstanceDateRangeAppA', null, null);
SubstanceDetailsAppA.addChildElement('FrequencySubstanceAppA', null, null);
AvokaSmartForm.addChildElement('YNReceivedTreatmentAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AdvisedAlcoholTreatmentDetailsAppA', null, null);
AvokaSmartForm.addChildElement('YNFatherLivingAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('FatherAgeiflivingAppA', null, null);
AvokaSmartForm.addChildElement('FatherAgeAtDeathAppA', null, null);
AvokaSmartForm.addChildElement('YNFatherCADAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('FatherAgeOfOnsetCADAppA', null, null);
AvokaSmartForm.addChildElement('YNFatherCancerAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('FatherAgeOfOnsetCancerAppA', null, null);
AvokaSmartForm.addChildElement('YNFatherDiabetesAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('YNFatherDementiaAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('YNFatherHuntingtonAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('YNMotherLivingAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('MotherAgeiflivingAppA', null, null);
AvokaSmartForm.addChildElement('MotherAgeAtDeathAppA', null, null);
AvokaSmartForm.addChildElement('YNMotherCADAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('MotherAgeOfOnsetCADAppA', null, null);
AvokaSmartForm.addChildElement('YNMotherCancerAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('MotherAgeOfOnsetCancerAppA', null, null);
AvokaSmartForm.addChildElement('YNMotherDiabetesAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('YNMotherDementiaAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('YNMotherHuntingtonAppA', null, null).addTextNode('Unknown');
    AvokaSmartForm.addChildElement('YNSeenPCPAppB', null, null);
AvokaSmartForm.addChildElement('PCPNameAppB', null, null);
AvokaSmartForm.addChildElement('Checkbox_10', null, null);
AvokaSmartForm.addChildElement('PCPAddr1AppB', null, null);
AvokaSmartForm.addChildElement('PCPAddr2AppB', null, null);
AvokaSmartForm.addChildElement('PCPCityAppB', null, null);
AvokaSmartForm.addChildElement('PCPStateAppB', null, null);
AvokaSmartForm.addChildElement('PCPZipCodeAppB', null, null);
AvokaSmartForm.addChildElement('PhoneNumberPCPAppB', null, null);
AvokaSmartForm.addChildElement('ReasonLastSeenAppB', null, null);
AvokaSmartForm.addChildElement('DateLastSeenAppB', null, null);
AvokaSmartForm.addChildElement('DateRangePCPAppB', null, null);
AvokaSmartForm.addChildElement('OtherDetailsPCPDateRangeAppB', null, null);
AvokaSmartForm.addChildElement('AnginaAppBGIC', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAnginaChestPainsDetailsAppB', null, null);
AvokaSmartForm.addChildElement('AnginaAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAngineDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ChestPainsAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalChestPainsDetailsAppB', null, null);
AvokaSmartForm.addChildElement('HeartAttackAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHeartAttackDetailsAppB', null, null);
AvokaSmartForm.addChildElement('HeartDiseaseDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHeartDiseaseDetailsAppB', null, null);
AvokaSmartForm.addChildElement('HeartMurmurAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalMurmurDetailsAppB', null, null);
AvokaSmartForm.addChildElement('HighBloodPressureAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHBPDetailsAppB', null, null);
AvokaSmartForm.addChildElement('IrregularHeartbeatPalpitationsAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalPalpitationsDetailsAppB', null, null);
AvokaSmartForm.addChildElement('PeripheralVascularAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalPVDDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ColitisorCrohnsDiseaseAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalColitisDetailsAppB', null, null);
AvokaSmartForm.addChildElement('EsophagusDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalEsophagusDetailsAppB', null, null);
AvokaSmartForm.addChildElement('HepatitisAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHepatitisDetailsAppB', null, null);
AvokaSmartForm.addChildElement('IntestinalDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalIntestinalDetailsAppB', null, null);
AvokaSmartForm.addChildElement('LiverDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalLiverDetailsAppB', null, null);
AvokaSmartForm.addChildElement('PancreatitisAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalPancreatitisDetailsAppB', null, null);
AvokaSmartForm.addChildElement('StomachDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalStomachDetailsAppB', null, null);
AvokaSmartForm.addChildElement('WeightLossProcedureAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalWeightLossDetailsAppB', null, null);
AvokaSmartForm.addChildElement('DiabetesAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalDiabetesDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ThyroidDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalThyroidDetailsAppB', null, null);
AvokaSmartForm.addChildElement('CancerAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalCancerDetailsAppB', null, null);
AvokaSmartForm.addChildElement('LeukemiaorLymphomaAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalLeukemiaDetailsAppB', null, null);
AvokaSmartForm.addChildElement('TumorAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalTumorDetailsAppB', null, null);
AvokaSmartForm.addChildElement('AsthmaAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAsthmaDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ChronicBronchitisAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalCOPDDetailsAppB', null, null);
AvokaSmartForm.addChildElement('CysticFibrosisAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalCysticFibrosisDetailsAppB', null, null);
AvokaSmartForm.addChildElement('SleepApneaAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalSleepApneaDetailsAppB', null, null);
AvokaSmartForm.addChildElement('BloodDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBloodDetailsAppB', null, null);
AvokaSmartForm.addChildElement('MacularDegenerationAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalMacularDetailsAppB', null, null);
AvokaSmartForm.addChildElement('BipolarDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBipolarDetailsAppB', null, null);
AvokaSmartForm.addChildElement('DepressionAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalDepressionDetailsAppB', null, null);
AvokaSmartForm.addChildElement('OtherMentalAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalOtherMentalDetailsAppB', null, null);
AvokaSmartForm.addChildElement('BladderDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBladderDetailsAppB', null, null);
AvokaSmartForm.addChildElement('KidneyDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalKidneyDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ProstateDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalProstateDetailsAppB', null, null);
AvokaSmartForm.addChildElement('AmputationAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAmputationDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ArthritisAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalArthritisDetailsAppB', null, null);
AvokaSmartForm.addChildElement('BackSpineorNeckDisorderAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBackDisorderDetailsAppB', null, null);
AvokaSmartForm.addChildElement('FibromyalgiaAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBoneDisorderDetailsAppB', null, null);
AvokaSmartForm.addChildElement('OsteoporosisOsteopeniaAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalOsteoporosisDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ALSAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalALSDetailsAppB', null, null);
AvokaSmartForm.addChildElement('AlzheimersDiseaseAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalAlzheimersDetailsAppB', null, null);
AvokaSmartForm.addChildElement('BrainorNervousSystemAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalBrainDisorderDetailsAppB', null, null);
AvokaSmartForm.addChildElement('HuntingtonsDiseaseAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHuntingtonDetailsAppB', null, null);
AvokaSmartForm.addChildElement('InjuryduetofallsorimbalanceAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalFallInjuryDetailsAppB', null, null);
AvokaSmartForm.addChildElement('MultipleSclerosisAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalMSDetailsAppB', null, null);
AvokaSmartForm.addChildElement('MuscularDystrophyAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalDystrophyDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ParalysisAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalParalysisDetailsAppB', null, null);
AvokaSmartForm.addChildElement('ParkinsonsDiseaseAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalParkinsonDetailsAppB', null, null);
AvokaSmartForm.addChildElement('PostPolioSyndromeAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalPostPolioDetailsAppB', null, null);
AvokaSmartForm.addChildElement('SeizuresConvulsionsorFaintingAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalSeizuresDetailsAppB', null, null);
AvokaSmartForm.addChildElement('TIAAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalTIADetailsAppB', null, null);
AvokaSmartForm.addChildElement('AIDSAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalHIVAIDSDetailsAppB', null, null);
AvokaSmartForm.addChildElement('LupusAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalLupusDetailsAppB', null, null);
AvokaSmartForm.addChildElement('OrganTransplantAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalOrganDetailsAppB', null, null);
AvokaSmartForm.addChildElement('OtherconditionsAppB', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('MedicalOtherConditionsDetailsAppB', null, null);
AvokaSmartForm.addChildElement('NoneApplyAppB_1', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('YNDiagnosticTestAppB', null, null);
AvokaSmartForm.addChildElement('DiagnosticTestDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslyHospitalAppB', null, null);
AvokaSmartForm.addChildElement('OtherThanPreviouslyHospitalDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslyIllnessAppB', null, null);
AvokaSmartForm.addChildElement('OtherThanPreviouslyIllnessDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslySurgeryAppB', null, null);
AvokaSmartForm.addChildElement('OtherThanPreviouslySurgeryDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslyMedsAppB', null, null);
AvokaSmartForm.addChildElement('OtherThanPreviouslyMedsDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YNOtherThanPreviouslyFacilityAppB', null, null);
AvokaSmartForm.addChildElement('OtherThanPreviouslyFacilityDetailsAppB', null, null);
AvokaSmartForm.addChildElement('WorkersCompensationAppB', null, null);
AvokaSmartForm.addChildElement('OtherDisabilityIncomeAppB', null, null);
AvokaSmartForm.addChildElement('NoneApplyDisabilityAppB', null, null);
dom.XmlNode AppBWorkersComp=AvokaSmartForm.addChildElement('AppBWorkersComp', null, null);
AppBWorkersComp.addChildElement('BriefdescriptionofdisabilityAppB', null, null);
AppBWorkersComp.addChildElement('FromDateAppB', null, null);
AppBWorkersComp.addChildElement('DateFromRangeDisabilityAppB', null, null);
AppBWorkersComp.addChildElement('OtherDetailsFromDateDateRangeAppB', null, null);
AppBWorkersComp.addChildElement('ToDateAppB', null, null);
AppBWorkersComp.addChildElement('DateToRangeDisabilityAppB', null, null);
AppBWorkersComp.addChildElement('OtherDetailsToDateDateRangeAppB', null, null);
dom.XmlNode AppBOtherDisabilityIncome=AvokaSmartForm.addChildElement('AppBOtherDisabilityIncome', null, null);
AppBOtherDisabilityIncome.addChildElement('BriefdescriptionofincomeAppB', null, null);
AppBOtherDisabilityIncome.addChildElement('FromDateIncomeAppB', null, null);
AppBOtherDisabilityIncome.addChildElement('DateFromRangeIncomeAppB', null, null);
AppBOtherDisabilityIncome.addChildElement('OtherDetailsFromDateRangeIncomeAppB', null, null);
AppBOtherDisabilityIncome.addChildElement('ToDateIncomeAppB', null, null);
AppBOtherDisabilityIncome.addChildElement('DateToRangeIncomeAppB', null, null);
AppBOtherDisabilityIncome.addChildElement('OtherDetailsToDateRangeIncomeAppB', null, null);
AvokaSmartForm.addChildElement('HeightAppB', null, null);
AvokaSmartForm.addChildElement('WeightlbsAppB', null, null);
AvokaSmartForm.addChildElement('YNLostGainedAppB', null, null);
AvokaSmartForm.addChildElement('WastheweightlostorgainedAppB', null, null);
AvokaSmartForm.addChildElement('HowmanypoundsAppB', null, null);
AvokaSmartForm.addChildElement('YNDietExerciseAppBICC', null, null);
AvokaSmartForm.addChildElement('YNChangeIntentionalAppBNonICC', null, null);
AvokaSmartForm.addChildElement('WeightChangeCauseAppBNonICC', null, null);
AvokaSmartForm.addChildElement('YNCurrentlyPregnantAppB', null, null);
AvokaSmartForm.addChildElement('WhatisyourduedateAppB', null, null);
AvokaSmartForm.addChildElement('AmountofweightgainedAppB', null, null);
AvokaSmartForm.addChildElement('YNDrinkAlcoholAppB', null, null);
AvokaSmartForm.addChildElement('YNEverUsedAlcoholAppB', null, null);
AvokaSmartForm.addChildElement('DateoflastuseAppB', null, null);
AvokaSmartForm.addChildElement('DateRangeAlcoholAppB', null, null);
AvokaSmartForm.addChildElement('OtherDetailsAlcoholDateRangeAppB', null, null);
AvokaSmartForm.addChildElement('ReasonforquittingAppB', null, null);
AvokaSmartForm.addChildElement('WhattypeAppB', null, null);
AvokaSmartForm.addChildElement('OtherDetailsAppB', null, null);
AvokaSmartForm.addChildElement('FrequencyandAmountAppB', null, null);
AvokaSmartForm.addChildElement('YNAdvisedToQuitAppB', null, null);
AvokaSmartForm.addChildElement('AdvisedToQuitDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YNAdvisedAlcoholCounselingAppB', null, null);
AvokaSmartForm.addChildElement('AdvisedAlcoholCounselingDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YNSubstanceHistoryAppB', null, null);
dom.XmlNode SubstanceDetailsAppB=AvokaSmartForm.addChildElement('SubstanceDetailsAppB', null, null);
SubstanceDetailsAppB.addChildElement('NameofSubstanceAppB', null, null);
SubstanceDetailsAppB.addChildElement('DateLastUsedSubstanceAppB', null, null);
SubstanceDetailsAppB.addChildElement('DateRangeSubstanceAppB', null, null);
SubstanceDetailsAppB.addChildElement('OtherDetailsSubstanceDateRangeAppB', null, null);
SubstanceDetailsAppB.addChildElement('FrequencySubstanceAppB', null, null);
AvokaSmartForm.addChildElement('YNReceivedTreatmentAppB', null, null);
AvokaSmartForm.addChildElement('AdvisedAlcoholTreatmentDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YNFatherLivingAppB', null, null);
AvokaSmartForm.addChildElement('FatherAgeiflivingAppB', null, null);
AvokaSmartForm.addChildElement('FatherAgeAtDeathAppB', null, null);
AvokaSmartForm.addChildElement('YNFatherCADAppB', null, null);
AvokaSmartForm.addChildElement('FatherAgeOfOnsetCADAppB', null, null);
AvokaSmartForm.addChildElement('YNFatherCancerAppB', null, null);
AvokaSmartForm.addChildElement('FatherAgeOfOnsetCancerAppB', null, null);
AvokaSmartForm.addChildElement('YNFatherDiabetesAppB', null, null);
AvokaSmartForm.addChildElement('YNFatherDementiaAppB', null, null);
AvokaSmartForm.addChildElement('YNFatherHuntingtonAppB', null, null);
AvokaSmartForm.addChildElement('YNMotherLivingAppB', null, null);
AvokaSmartForm.addChildElement('MotherAgeiflivingAppB', null, null);
AvokaSmartForm.addChildElement('MotherAgeAtDeathAppB', null, null);
AvokaSmartForm.addChildElement('YNMotherCADAppB', null, null);
AvokaSmartForm.addChildElement('MotherAgeOfOnsetCADAppB', null, null);
AvokaSmartForm.addChildElement('YNMotherCancerAppB', null, null);
AvokaSmartForm.addChildElement('MotherAgeOfOnsetCancerAppB', null, null);
AvokaSmartForm.addChildElement('YNMotherDiabetesAppB', null, null);
AvokaSmartForm.addChildElement('YNMotherDementiaAppB', null, null);
AvokaSmartForm.addChildElement('YNMotherHuntingtonAppB', null, null);
AvokaSmartForm.addChildElement('AppAHeight', null, null).addTextNode('5 7"');
    AvokaSmartForm.addChildElement('AppAweightlbs', null, null).addTextNode('222');
    AvokaSmartForm.addChildElement('AppBHeight', null, null);
AvokaSmartForm.addChildElement('AppBweightlbs', null, null);
dom.XmlNode HowWillYouPayCheck=AvokaSmartForm.addChildElement('HowWillYouPayCheck', null, null);
HowWillYouPayCheck.addChildElement('FromMyIncome', null, null).addTextNode('true');
        HowWillYouPayCheck.addChildElement('FromMySavingsInvestments', null, null);
HowWillYouPayCheck.addChildElement('MyFamilyWillPay', null, null);
AvokaSmartForm.addChildElement('YnHaveYouConsidered', null, null).addTextNode('Yes');
    AvokaSmartForm.addChildElement('YnProvidingClientInfo', null, null).addTextNode('Yes');
    AvokaSmartForm.addChildElement('WhatIsYourAnnualIncome', null, null).addTextNode('Over50000');
    AvokaSmartForm.addChildElement('HowDoYouExpect', null, null).addTextNode('Increase');
    AvokaSmartForm.addChildElement('YnWillYouBuyInflationProtection', null, null).addTextNode('Yes');
    AvokaSmartForm.addChildElement('IfNotHowWillYouPay', null, null);
AvokaSmartForm.addChildElement('HowAreYouPlanningToPay', null, null).addTextNode('FromMySavingsInvestm');
    AvokaSmartForm.addChildElement('NotCountingYourHome', null, null).addTextNode('n3000150000');
    AvokaSmartForm.addChildElement('HowDoYouExpectYourAssets', null, null).addTextNode('Increase');
    AvokaSmartForm.addChildElement('TheAnswersToThePreceding', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('TheApplicantAcknowledgesThat', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('YnVerificationOfNon', null, null);
AvokaSmartForm.addChildElement('TheApplicantAcknowledges', null, null);
AvokaSmartForm.addChildElement('CurrentIncomefromEmployment', null, null);
AvokaSmartForm.addChildElement('SellInvestments', null, null);
AvokaSmartForm.addChildElement('CurrentIncomefromInvestments', null, null);
AvokaSmartForm.addChildElement('SellOtherAssets', null, null);
AvokaSmartForm.addChildElement('OtherCurrentIncome', null, null);
AvokaSmartForm.addChildElement('MoneyfromMyFamily', null, null);
AvokaSmartForm.addChildElement('Savings', null, null);
AvokaSmartForm.addChildElement('Other', null, null);
AvokaSmartForm.addChildElement('ProvideDetails', null, null);
AvokaSmartForm.addChildElement('IRARothIRA', null, null);
AvokaSmartForm.addChildElement('PaytheHigherPremium', null, null);
AvokaSmartForm.addChildElement('ReduceBenefits', null, null);
AvokaSmartForm.addChildElement('CallTheCompanyAgent', null, null);
AvokaSmartForm.addChildElement('DropThePolicy', null, null);
AvokaSmartForm.addChildElement('DontKnow', null, null);
AvokaSmartForm.addChildElement('IfYouPlanToPayPremium', null, null);
AvokaSmartForm.addChildElement('InflationProtectionDetails', null, null);
AvokaSmartForm.addChildElement('FromMyIncomeEP', null, null);
AvokaSmartForm.addChildElement('FromMySavingsInvestmentsEP', null, null);
AvokaSmartForm.addChildElement('MyFamilyWillPayEP', null, null);
AvokaSmartForm.addChildElement('TheAnswersToTheQuestionsAbove', null, null);
AvokaSmartForm.addChildElement('TheApplicantAcknowledgesDisclose', null, null);
AvokaSmartForm.addChildElement('YesNoRadioButtons', null, null);
AvokaSmartForm.addChildElement('DfAppAElimPeriod', null, null).addTextNode('90');
    AvokaSmartForm.addChildElement('DfAppBElimPeriod', null, null).addTextNode('90');
    AvokaSmartForm.addChildElement('DfFinancialsDisclosed', null, null);
AvokaSmartForm.addChildElement('DfEPAppA', null, null).addTextNode('90');
    AvokaSmartForm.addChildElement('DfAppACalculatedCoC', null, null).addTextNode('24,750');
    AvokaSmartForm.addChildElement('DfEPAppB', null, null).addTextNode('90');
    AvokaSmartForm.addChildElement('DfAppBCalculatedCoC', null, null).addTextNode('24,750');
    AvokaSmartForm.addChildElement('AppABirthplace', null, null).addTextNode('Alaska (AK)');
    AvokaSmartForm.addChildElement('AppACountry_1', null, null);
AvokaSmartForm.addChildElement('AppAProvideDetails', null, null);
AvokaSmartForm.addChildElement('AppATerritoryProvince', null, null);
AvokaSmartForm.addChildElement('TxtSSNTINAppA', null, null).addTextNode('*****9999');
    AvokaSmartForm.addChildElement('AppASSNUnmasked', null, null).addTextNode('999999999');
    AvokaSmartForm.addChildElement('AppAemailAddress', null, null).addTextNode('test@test.com');
    AvokaSmartForm.addChildElement('AppAphoneNumberAddlInfo', null, null).addTextNode('(807) 876-5678');
    dom.XmlNode AppABestTimeToCallGLIC=AvokaSmartForm.addChildElement('AppABestTimeToCallGLIC', null, null);
AppABestTimeToCallGLIC.addChildElement('BestTimeToCallHourAppA', null, null);
AppABestTimeToCallGLIC.addChildElement('BestTimeToCallMinAppA', null, null);
AppABestTimeToCallGLIC.addChildElement('BestTimeToCallAMPMAppA', null, null);
AppABestTimeToCallGLIC.addChildElement('DfTimeAppA', null, null);
AppABestTimeToCallGLIC.addChildElement('DfAMPMAppA', null, null);
AvokaSmartForm.addChildElement('AppAStateIDDLNumberGLIC', null, null);
AvokaSmartForm.addChildElement('AppAStateofIssue', null, null);
dom.XmlNode AppAResidentAddress=AvokaSmartForm.addChildElement('AppAResidentAddress', null, null);
dom.XmlNode AppAResidentAddressPlease=AppAResidentAddress.addChildElement('Please', null, null);
dom.XmlNode AppAResidentAddressInput=AppAResidentAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppAResidentAddressThe=AppAResidentAddressInput.addChildElement('The', null, null);
AppAResidentAddressThe.addChildElement('Address', null, null);
AppAResidentAddress.addChildElement('Checkbox_4', null, null).addTextNode('true');
        AppAResidentAddress.addChildElement('ResidentAddr1AppA', null, null).addTextNode('Test Addr1');
        AppAResidentAddress.addChildElement('ResidentAddr2AppA', null, null).addTextNode('Test Addr2');
        AppAResidentAddress.addChildElement('ResidentCityAppA', null, null).addTextNode('Test City');
        AppAResidentAddress.addChildElement('ResidentStateAppA', null, null).addTextNode('AZ');
        AppAResidentAddress.addChildElement('ResidentZipCodeAppA', null, null).addTextNode('13453');
        AppAResidentAddress.addChildElement('DfIsManualInputResidentAddressAppA', null, null).addTextNode('true');
        dom.XmlNode AppAResidentAddressFull=AppAResidentAddress.addChildElement('Full', null, null);
AppAResidentAddressFull.addChildElement('Address_4', null, null).addTextNode('Test Addr1, Test Addr2, Test City, AZ, 13453');

    dom.XmlNode AppAMailingAddress=AvokaSmartForm.addChildElement('AppAMailingAddress', null, null);
dom.XmlNode AppAMailingAddressPlease=AppAMailingAddress.addChildElement('Please', null, null);
dom.XmlNode AppAMailingAddressInput=AppAMailingAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppAMailingAddressThe=AppAMailingAddressInput.addChildElement('The', null, null);
AppAMailingAddressThe.addChildElement('Address_1', null, null);
AppAMailingAddress.addChildElement('Checkbox', null, null);
AppAMailingAddress.addChildElement('MailingAddr1AppA', null, null);
AppAMailingAddress.addChildElement('MailingAddr2AppA', null, null);
AppAMailingAddress.addChildElement('MailinCityAppA', null, null);
AppAMailingAddress.addChildElement('MailingStateAppA', null, null);
AppAMailingAddress.addChildElement('MailingZipCodeAppA', null, null);
AppAMailingAddress.addChildElement('DfIsManualInputMailingAddressAppA', null, null);
dom.XmlNode AppAMailingAddressPleaseFull=AppAMailingAddress.addChildElement('Full', null, null);
AppAMailingAddressPleaseFull.addChildElement('Address', null, null);
AvokaSmartForm.addChildElement('SpouseFirstName', null, null);
AvokaSmartForm.addChildElement('SpouseMiddleInitial', null, null);
AvokaSmartForm.addChildElement('SpouseLastName', null, null);
AvokaSmartForm.addChildElement('SpouseSuffix', null, null);
AvokaSmartForm.addChildElement('SpouseOtherDetails', null, null);
AvokaSmartForm.addChildElement('TxtSSNTINCouple', null, null);
AvokaSmartForm.addChildElement('SpouseSSNUnmasked', null, null);
dom.XmlNode CouplesDOB=AvokaSmartForm.addChildElement('CouplesDOB', null, null);
CouplesDOB.addChildElement('SpouseBirthMonth', null, null);
CouplesDOB.addChildElement('SpouseBirthDay', null, null);
CouplesDOB.addChildElement('SpouseBirthYear', null, null);
CouplesDOB.addChildElement('DfBirthDateSpouse', null, null);
AvokaSmartForm.addChildElement('SpouseExistingCoverageNumber', null, null);
AvokaSmartForm.addChildElement('AppBBirthplace', null, null);
AvokaSmartForm.addChildElement('AppBCountry_1', null, null);
AvokaSmartForm.addChildElement('AppBProvideDetails', null, null);
AvokaSmartForm.addChildElement('AppBTerritoryProvince', null, null);
AvokaSmartForm.addChildElement('TxtSSNTINAppB', null, null);
AvokaSmartForm.addChildElement('AppBSSNUnmasked', null, null);
AvokaSmartForm.addChildElement('AppBemailAddress', null, null);
AvokaSmartForm.addChildElement('AppBphoneNumberAddlInfo', null, null);
dom.XmlNode AppBBestTimeToCallGLIC=AvokaSmartForm.addChildElement('AppBBestTimeToCallGLIC', null, null);
AppBBestTimeToCallGLIC.addChildElement('BestTimeToCallHourAppB', null, null);
AppBBestTimeToCallGLIC.addChildElement('BestTimeToCallMinAppB', null, null);
AppBBestTimeToCallGLIC.addChildElement('BestTimeToCallAMPMAppB', null, null);
AppBBestTimeToCallGLIC.addChildElement('DfTimeAppB', null, null);
AvokaSmartForm.addChildElement('AppBstateIDDriverslicenseNumberGLIC', null, null);
AvokaSmartForm.addChildElement('AppBStateofIssue', null, null);
AvokaSmartForm.addChildElement('YnAppBSameAddressAsAppA', null, null);
dom.XmlNode AppBResidentAddress=AvokaSmartForm.addChildElement('AppBResidentAddress', null, null);
dom.XmlNode AppBResidentAddressPlease=AppBResidentAddress.addChildElement('Please', null, null);
dom.XmlNode AppBResidentAddressInput=AppBResidentAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppBResidentAddressThe=AppBResidentAddressInput.addChildElement('The', null, null);
AppBResidentAddressThe.addChildElement('Address_2', null, null);
AppBResidentAddress.addChildElement('Checkbox_1', null, null);
AppBResidentAddress.addChildElement('ResidentAddr1AppB', null, null);
AppBResidentAddress.addChildElement('ResidentAddr2AppB', null, null);
AppBResidentAddress.addChildElement('ResidentCityAppB', null, null);
AppBResidentAddress.addChildElement('ResidentStateAppB', null, null);
AppBResidentAddress.addChildElement('ResidentZipCodeAppB', null, null);
AppBResidentAddress.addChildElement('DfIsManualInputResidentAddressAppB', null, null);
dom.XmlNode AppBResidentAddressFull=AppBResidentAddress.addChildElement('Full', null, null);
AppBResidentAddressFull.addChildElement('Address_1', null, null);
AvokaSmartForm.addChildElement('YnAppBResidentAddress', null, null);
dom.XmlNode AppBMailingAddress=AvokaSmartForm.addChildElement('AppBMailingAddress', null, null);
AppBMailingAddress.addChildElement('PleaseSelectToManuallyEnter', null, null);
AppBMailingAddress.addChildElement('MailingAddr1AppB', null, null);
AppBMailingAddress.addChildElement('MailingAddr2AppB', null, null);
AppBMailingAddress.addChildElement('MailingCityAppB', null, null);
AppBMailingAddress.addChildElement('MailingStateAppB', null, null);
AppBMailingAddress.addChildElement('MailingZipCodeAppB', null, null);
AppBMailingAddress.addChildElement('DfIsManualInputMailingAddressAppB', null, null);
AppBMailingAddress.addChildElement('FullAddress', null, null);
AvokaSmartForm.addChildElement('DfCouplesFormTrigger', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('YnAccidentSicknessAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppAAccidentCompany', null, null);
AvokaSmartForm.addChildElement('ProvideDetailsAppAAccident', null, null);
AvokaSmartForm.addChildElement('YnLTCAppA', null, null);
AvokaSmartForm.addChildElement('DmBenefitTypeAppA', null, null);
AvokaSmartForm.addChildElement('AppABenDailyValue', null, null);
AvokaSmartForm.addChildElement('AppABenMonthlyValue', null, null);
AvokaSmartForm.addChildElement('YnAccidentSicknessAppB', null, null);
AvokaSmartForm.addChildElement('AppBAccidentCompany', null, null);
AvokaSmartForm.addChildElement('ProvideDetailsAppBAccident', null, null);
AvokaSmartForm.addChildElement('YnLTCAppB', null, null);
AvokaSmartForm.addChildElement('DmBenefitTypeAppB', null, null);
AvokaSmartForm.addChildElement('AppBBenDailyValue', null, null);
AvokaSmartForm.addChildElement('AppBBenMonthlyValue', null, null);
AvokaSmartForm.addChildElement('YnPolicyInForceAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppAPolicyInForceCompany', null, null);
AvokaSmartForm.addChildElement('PolicyInForceProvideDetailsAppA', null, null);
AvokaSmartForm.addChildElement('LapseDateMonthAppA', null, null);
AvokaSmartForm.addChildElement('LapseDateYearsAppA', null, null);
AvokaSmartForm.addChildElement('YnPolicyInForceAppB', null, null);
AvokaSmartForm.addChildElement('AppBPolicyInForceCompany', null, null);
AvokaSmartForm.addChildElement('PolicyInForceProvideDetailsAppB', null, null);
AvokaSmartForm.addChildElement('LapseDateMonthAppB', null, null);
AvokaSmartForm.addChildElement('LapseDateYearsAppB', null, null);
AvokaSmartForm.addChildElement('YnDoYouIntendAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppACompanyDoYouIntend', null, null);
AvokaSmartForm.addChildElement('DoYouIntendProvideDetailsAppA', null, null);
AvokaSmartForm.addChildElement('DoYouIntendPolicyAppA', null, null);
AvokaSmartForm.addChildElement('YnDoYouIntendAppB', null, null);
AvokaSmartForm.addChildElement('AppBCompanyDoYouIntend', null, null);
AvokaSmartForm.addChildElement('DoYouIntendProvideDetailsAppB', null, null);
AvokaSmartForm.addChildElement('DoYouIntendPolicyAppB', null, null);
AvokaSmartForm.addChildElement('YnApplicationReinstatementAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppACompanyAppReinstate', null, null);
AvokaSmartForm.addChildElement('AppReinstateProvideDetailsAppA', null, null);
AvokaSmartForm.addChildElement('AppAAppReinstateProduct', null, null);
AvokaSmartForm.addChildElement('AppAAppReinstateAction', null, null);
AvokaSmartForm.addChildElement('AppAAppReinstateReason', null, null);
AvokaSmartForm.addChildElement('AppReinstateDateOfActionAppA', null, null);
AvokaSmartForm.addChildElement('AppAAppReinstateOtherDetails', null, null);
AvokaSmartForm.addChildElement('YnApplicationReinstatementAppB', null, null);
AvokaSmartForm.addChildElement('AppBCompanyAppReinstate', null, null);
AvokaSmartForm.addChildElement('AppReinstateProvideDetailsAppB', null, null);
AvokaSmartForm.addChildElement('AppBAppReinstateProduct', null, null);
AvokaSmartForm.addChildElement('AppBAppReinstateAction', null, null);
AvokaSmartForm.addChildElement('AppBAppReinstateReason', null, null);
AvokaSmartForm.addChildElement('AppReinstateDateOfActionAppB', null, null);
AvokaSmartForm.addChildElement('AppBAppReinstateOtherDetails', null, null);
dom.XmlNode AppAPolicyRepReviewSticky=AvokaSmartForm.addChildElement('AppAPolicyRepReviewSticky', null, null);
AppAPolicyRepReviewSticky.addChildElement('AppAPolicyRepReview', null, null);
AppAPolicyRepReviewSticky.addChildElement('PolicyRepReviewProvideDetailsAppA', null, null);
dom.XmlNode AppBPolicyRepReviewSticky=AvokaSmartForm.addChildElement('AppBPolicyRepReviewSticky', null, null);
AppBPolicyRepReviewSticky.addChildElement('AppBPolicyRepReview', null, null);
AppBPolicyRepReviewSticky.addChildElement('PolicyRepReviewProvideDetailsAppB', null, null);
AvokaSmartForm.addChildElement('YnAckNonDupAppA', null, null);
AvokaSmartForm.addChildElement('YnWillThereBeDupAppA', null, null);
AvokaSmartForm.addChildElement('AppAAgentExplain', null, null);
AvokaSmartForm.addChildElement('AppAAckNonDup', null, null);
AvokaSmartForm.addChildElement('YnAckNonDupAppB', null, null);
AvokaSmartForm.addChildElement('YnWillThereBeDupAppB', null, null);
AvokaSmartForm.addChildElement('AppBAgentExplain', null, null);
AvokaSmartForm.addChildElement('AppBAckNonDup', null, null);
AvokaSmartForm.addChildElement('YnAppAPAUL', null, null).addTextNode('IElectNOTToDesignate');
    AvokaSmartForm.addChildElement('AppAPrefixPAUL', null, null);
AvokaSmartForm.addChildElement('AppAFirstNamePAUL', null, null);
AvokaSmartForm.addChildElement('AppALastNamePAUL', null, null);
AvokaSmartForm.addChildElement('AppASuffixPAUL', null, null);
AvokaSmartForm.addChildElement('AppASuffixDetailsPAUL', null, null);
dom.XmlNode AppAPAULAddress=AvokaSmartForm.addChildElement('AppAPAULAddress', null, null);
dom.XmlNode AppAPAULAddressPlease=AppAPAULAddress.addChildElement('Please', null, null);
dom.XmlNode AppAPAULAddressInput=AppAPAULAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppAPAULAddressThe=AppAPAULAddressInput.addChildElement('The', null, null);
AppAPAULAddressThe.addChildElement('Address_6', null, null);
AppAPAULAddress.addChildElement('Checkbox_7', null, null);
AppAPAULAddress.addChildElement('Addr1AppAPAUL', null, null);
AppAPAULAddress.addChildElement('Addr2AppAPAUL', null, null);
AppAPAULAddress.addChildElement('CityAppAPAUL', null, null);
AppAPAULAddress.addChildElement('StateAppAPAUL', null, null);
AppAPAULAddress.addChildElement('ZipcodeAppAPAUL', null, null);
dom.XmlNode AppAPAULAddressIs=AppAPAULAddress.addChildElement('Is', null, null);
dom.XmlNode AppAPAULAddressManual=AppAPAULAddressIs.addChildElement('Manual', null, null);
AppAPAULAddressManual.addChildElement('Input_6', null, null);
dom.XmlNode AppAPAULAddressFull=AppAPAULAddress.addChildElement('Full', null, null);
AppAPAULAddressFull.addChildElement('Address_6', null, null);
AvokaSmartForm.addChildElement('AppAphoneNumber', null, null);
AvokaSmartForm.addChildElement('AppARelationship', null, null);
AvokaSmartForm.addChildElement('YnAppBPAUL', null, null);
AvokaSmartForm.addChildElement('UseSameInfoAsApplicantAPAUL', null, null);
AvokaSmartForm.addChildElement('AppBPrefixPAUL', null, null);
AvokaSmartForm.addChildElement('AppBFirstNamePAUL', null, null);
AvokaSmartForm.addChildElement('AppBLastNamePAUL', null, null);
AvokaSmartForm.addChildElement('AppBSuffixPAUL', null, null);
AvokaSmartForm.addChildElement('AppBSuffixDetailsPAUL', null, null);
dom.XmlNode AppBPAULAddress=AvokaSmartForm.addChildElement('AppBPAULAddress', null, null);
dom.XmlNode AppBPAULAddressPlease=AppBPAULAddress.addChildElement('Please', null, null);
dom.XmlNode AppBPAULAddressInput=AppBPAULAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppBPAULAddressThe=AppBPAULAddressInput.addChildElement('The', null, null);
AppBPAULAddressThe.addChildElement('Address', null, null);
AppBPAULAddress.addChildElement('Checkbox', null, null);
AppBPAULAddress.addChildElement('AppBPAULAddr1', null, null);
AppBPAULAddress.addChildElement('AppBPAULAddr2', null, null);
AppBPAULAddress.addChildElement('AppBPAULCity', null, null);
AppBPAULAddress.addChildElement('AppBPAULState', null, null);
AppBPAULAddress.addChildElement('AppBPAULZipCode', null, null);
dom.XmlNode AppBPAULAddressIs=AppBPAULAddress.addChildElement('Is', null, null);
dom.XmlNode AppBPAULAddressManual=AppBPAULAddressIs.addChildElement('Manual', null, null);
AppBPAULAddressManual.addChildElement('Input', null, null);
dom.XmlNode AppBPAULAddressFull=AppBPAULAddress.addChildElement('Full', null, null);
AppBPAULAddressFull.addChildElement('Address', null, null);
AvokaSmartForm.addChildElement('AppBphoneNumber', null, null);
AvokaSmartForm.addChildElement('AppBRelationship', null, null);
AvokaSmartForm.addChildElement('YnAppADesignationofBeneficiary', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppABeneIrrevocable', null, null);
AvokaSmartForm.addChildElement('YnAppADesignateThirdParty', null, null);
AvokaSmartForm.addChildElement('YnAppAIsThisATrustPrimary', null, null);
AvokaSmartForm.addChildElement('AppABeneficiaryNameOfTrust', null, null);
AvokaSmartForm.addChildElement('AppABeneficiaryTrusteeName', null, null);
AvokaSmartForm.addChildElement('AppAPrimaryTrustDate', null, null);
AvokaSmartForm.addChildElement('AppAPrimaryTaxID', null, null);
AvokaSmartForm.addChildElement('AppAAllocatedPercentagePrimaryTrust', null, null);
AvokaSmartForm.addChildElement('AppABeneficiaryFirstName', null, null);
AvokaSmartForm.addChildElement('AppABeneficiaryLastName', null, null);
AvokaSmartForm.addChildElement('AppABeneficiarySuffix', null, null);
AvokaSmartForm.addChildElement('AppASuffixDetailsPrimaryDOB', null, null);
dom.XmlNode AppAPrimaryDOBDOB=AvokaSmartForm.addChildElement('AppAPrimaryDOBDOB', null, null);
AppAPrimaryDOBDOB.addChildElement('AppAPrimaryDOBBirthMonth', null, null);
AppAPrimaryDOBDOB.addChildElement('AppAPrimaryDOBBirthDay', null, null);
AppAPrimaryDOBDOB.addChildElement('AppAPrimaryDOBBirthYear', null, null);
dom.XmlNode AppAPrimarySSN=AvokaSmartForm.addChildElement('AppAPrimarySSN', null, null);
AppAPrimarySSN.addChildElement('AppADOBSSNPrimary', null, null);
AppAPrimarySSN.addChildElement('DfSSNUnmasked', null, null);
AvokaSmartForm.addChildElement('AppADOBAllocatedPercentagePrimaryPerson', null, null);
dom.XmlNode AppAPrimaryDOBAddress=AvokaSmartForm.addChildElement('AppAPrimaryDOBAddress', null, null);
dom.XmlNode AppAPrimaryDOBAddressPlease=AppAPrimaryDOBAddress.addChildElement('Please', null, null);
dom.XmlNode AppAPrimaryDOBAddressInput=AppAPrimaryDOBAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppAPrimaryDOBAddressThe=AppAPrimaryDOBAddressInput.addChildElement('The', null, null);
AppAPrimaryDOBAddressThe.addChildElement('Address_1', null, null);
AppAPrimaryDOBAddress.addChildElement('Checkbox_1', null, null);
AppAPrimaryDOBAddress.addChildElement('AppABeneficiaryAddr1', null, null);
AppAPrimaryDOBAddress.addChildElement('AppABeneficiaryAddr2', null, null);
AppAPrimaryDOBAddress.addChildElement('AppABeneficiaryCity', null, null);
AppAPrimaryDOBAddress.addChildElement('AppABeneficiaryState', null, null);
AppAPrimaryDOBAddress.addChildElement('AppABeneficiaryZipCode', null, null);
dom.XmlNode AppAPrimaryDOBAddressIs=AppAPrimaryDOBAddress.addChildElement('Is', null, null);
dom.XmlNode AppAPrimaryDOBAddressManual=AppAPrimaryDOBAddressIs.addChildElement('Manual', null, null);
AppAPrimaryDOBAddressManual.addChildElement('Input_1', null, null);
dom.XmlNode AppAPrimaryDOBAddressFull=AppAPrimaryDOBAddress.addChildElement('Full', null, null);
AppAPrimaryDOBAddressFull.addChildElement('Address_1', null, null);
AvokaSmartForm.addChildElement('AppADOBGenderPrimary', null, null);
AvokaSmartForm.addChildElement('YnDoesAppAWishToDesignate', null, null);
AvokaSmartForm.addChildElement('AppAPrimaryOrContingent', null, null);
AvokaSmartForm.addChildElement('YnAppAIsThisATrustAdditional', null, null);
AvokaSmartForm.addChildElement('AppAAdditionalBeneficiaryNameOfTrust', null, null);
AvokaSmartForm.addChildElement('AppAAdditionalBeneficiaryTrusteeName', null, null);
AvokaSmartForm.addChildElement('AppAAdditionalTrustDate', null, null);
AvokaSmartForm.addChildElement('AppAAdditionalTaxID', null, null);
AvokaSmartForm.addChildElement('AppAAllocatedPercentageAdditionalTrust', null, null);
AvokaSmartForm.addChildElement('AppAAdditionalBeneficiaryFirstName', null, null);
AvokaSmartForm.addChildElement('AppAAdditionalBeneficiaryLastName', null, null);
AvokaSmartForm.addChildElement('AppAAdditionalBeneficiarySuffix', null, null);
AvokaSmartForm.addChildElement('AppASuffixDetailsAdditionalDOB', null, null);
dom.XmlNode AppAAdditionalDOBDOB=AvokaSmartForm.addChildElement('AppAAdditionalDOBDOB', null, null);
AppAAdditionalDOBDOB.addChildElement('AppAAdditionalDOBBirthMonth', null, null);
AppAAdditionalDOBDOB.addChildElement('AppAAdditionalDOBBirthDay', null, null);
AppAAdditionalDOBDOB.addChildElement('AppAAdditionalDOBBirthYear', null, null);
dom.XmlNode AppAAdditionalSSN=AvokaSmartForm.addChildElement('AppAAdditionalSSN', null, null);
AppAAdditionalSSN.addChildElement('AppADOBSSNAdditional', null, null);
AppAAdditionalSSN.addChildElement('DfSSNUnmasked_1', null, null);
AvokaSmartForm.addChildElement('AppADOBAllocatedPercentageAdditionalPerson', null, null);
dom.XmlNode AppAAdditionalDOBAddress=AvokaSmartForm.addChildElement('AppAAdditionalDOBAddress', null, null);
dom.XmlNode AppAAdditionalDOBAddressPlease=AppAAdditionalDOBAddress.addChildElement('Please', null, null);
dom.XmlNode AppAAdditionalDOBAddressInput=AppAAdditionalDOBAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppAAdditionalDOBAddressThe=AppAAdditionalDOBAddressInput.addChildElement('The', null, null);
AppAAdditionalDOBAddressThe.addChildElement('Address_2', null, null);
AppAAdditionalDOBAddress.addChildElement('Checkbox_2', null, null);
AppAAdditionalDOBAddress.addChildElement('AppADOBAddr1', null, null);
AppAAdditionalDOBAddress.addChildElement('AppADOBAddr2', null, null);
AppAAdditionalDOBAddress.addChildElement('AppADOBCity', null, null);
AppAAdditionalDOBAddress.addChildElement('AppADOBState', null, null);
AppAAdditionalDOBAddress.addChildElement('AppADOBZipCode', null, null);
dom.XmlNode AppAAdditionalDOBAddressIs=AppAAdditionalDOBAddress.addChildElement('Is', null, null);
dom.XmlNode AppAAdditionalDOBAddressManual=AppAAdditionalDOBAddressIs.addChildElement('Manual', null, null);
AppAAdditionalDOBAddressManual.addChildElement('Input_2', null, null);
dom.XmlNode AppAAdditionalDOBAddressFull=AppAAdditionalDOBAddress.addChildElement('Full', null, null);
AppAAdditionalDOBAddressFull.addChildElement('Address_2', null, null);
AvokaSmartForm.addChildElement('AppADOBGenderAdditional', null, null);
AvokaSmartForm.addChildElement('YnAppBDesignationofBeneficiary', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('UseSameInfoAsApplicantAPrimaryDOB', null, null);
AvokaSmartForm.addChildElement('AppBBeneIrrevocable', null, null);
AvokaSmartForm.addChildElement('YnAppBDesignateThirdParty', null, null);
AvokaSmartForm.addChildElement('YnAppBIsThisATrustPrimary', null, null);
AvokaSmartForm.addChildElement('AppBBeneficiaryNameOfTrust', null, null);
AvokaSmartForm.addChildElement('AppBBeneficiaryTrusteeName', null, null);
AvokaSmartForm.addChildElement('AppBPrimaryTrustDate', null, null);
AvokaSmartForm.addChildElement('AppBPrimaryTaxID', null, null);
AvokaSmartForm.addChildElement('AppBAllocatedPercentagePrimaryTrust', null, null);
AvokaSmartForm.addChildElement('AppBBeneficiaryFirstName', null, null);
AvokaSmartForm.addChildElement('AppBBeneficiaryLastName', null, null);
AvokaSmartForm.addChildElement('AppBBeneficiarySuffix', null, null);
AvokaSmartForm.addChildElement('AppBSuffixDetailsPrimaryDOB', null, null);
dom.XmlNode AppBPrimaryDOBDOB=AvokaSmartForm.addChildElement('AppBPrimaryDOBDOB', null, null);
AppBPrimaryDOBDOB.addChildElement('AppBPrimaryDOBBirthMonth', null, null);
AppBPrimaryDOBDOB.addChildElement('AppBPrimaryDOBBirthDay', null, null);
AppBPrimaryDOBDOB.addChildElement('AppBPrimaryDOBBirthYear', null, null);
dom.XmlNode AppBPrimarySSN=AvokaSmartForm.addChildElement('AppBPrimarySSN', null, null);
AppBPrimarySSN.addChildElement('AppBDOBSSNPrimary', null, null);
AppBPrimarySSN.addChildElement('DfSSNUnmasked_2', null, null);
AvokaSmartForm.addChildElement('AppBDOBAllocatedPercentagePrimaryPerson', null, null);
dom.XmlNode AppBPrimaryDOBAddress=AvokaSmartForm.addChildElement('AppBPrimaryDOBAddress', null, null);
dom.XmlNode AppBPrimaryDOBAddressPlease=AppBPrimaryDOBAddress.addChildElement('Please', null, null);
dom.XmlNode AppBPrimaryDOBAddressInput=AppBPrimaryDOBAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppBPrimaryDOBAddressThe=AppBPrimaryDOBAddressInput.addChildElement('The', null, null);
AppBPrimaryDOBAddressThe.addChildElement('Address_3', null, null);
AppBPrimaryDOBAddress.addChildElement('Checkbox_3', null, null);
AppBPrimaryDOBAddress.addChildElement('AppBBeneficiaryAddr1', null, null);
AppBPrimaryDOBAddress.addChildElement('AppBBeneficiaryAddr2', null, null);
AppBPrimaryDOBAddress.addChildElement('AppBBeneficiaryCity', null, null);
AppBPrimaryDOBAddress.addChildElement('AppBBeneficiaryState', null, null);
AppBPrimaryDOBAddress.addChildElement('AppBBeneficiaryZipCode', null, null);
dom.XmlNode AppBPrimaryDOBAddressIs=AppBPrimaryDOBAddress.addChildElement('Is', null, null);
dom.XmlNode AppBPrimaryDOBAddressManual=AppBPrimaryDOBAddressIs.addChildElement('Manual', null, null);
AppBPrimaryDOBAddressManual.addChildElement('Input_3', null, null);
dom.XmlNode AppBPrimaryDOBAddressFull=AppBPrimaryDOBAddress.addChildElement('Full', null, null);
AppBPrimaryDOBAddressFull.addChildElement('Address_3', null, null);
AvokaSmartForm.addChildElement('AppBDOBGenderPrimary', null, null);
AvokaSmartForm.addChildElement('YnDoesAppBWishToDesignate', null, null);
AvokaSmartForm.addChildElement('UseSameInfoAsApplicantAAdditionalDOB', null, null);
AvokaSmartForm.addChildElement('AppBPrimaryOrContingent', null, null);
AvokaSmartForm.addChildElement('YnAppBIsThisATrustAdditional', null, null);
AvokaSmartForm.addChildElement('AppBAdditionalBeneficiaryNameOfTrust', null, null);
AvokaSmartForm.addChildElement('AppBAdditionalBeneficiaryTrusteeName', null, null);
AvokaSmartForm.addChildElement('AppBAdditionalTrustDate', null, null);
AvokaSmartForm.addChildElement('AppBAdditionalTaxID', null, null);
AvokaSmartForm.addChildElement('AppBAllocatedPercentageAdditionalTrust', null, null);
AvokaSmartForm.addChildElement('AppBAdditionalBeneficiaryFirstName', null, null);
AvokaSmartForm.addChildElement('AppBAdditionalBeneficiaryLastName', null, null);
AvokaSmartForm.addChildElement('AppBAdditionalBeneficiarySuffix', null, null);
AvokaSmartForm.addChildElement('AppBSuffixDetailsAdditionalDOB', null, null);
dom.XmlNode AppBAdditionalDOBDOB=AvokaSmartForm.addChildElement('AppBAdditionalDOBDOB', null, null);
AppBAdditionalDOBDOB.addChildElement('AppBAdditionalDOBBirthMonth', null, null);
AppBAdditionalDOBDOB.addChildElement('AppBAdditionalDOBBirthDay', null, null);
AppBAdditionalDOBDOB.addChildElement('AppBAdditionalDOBBirthYear', null, null);
dom.XmlNode AppBAdditionalSSN=AvokaSmartForm.addChildElement('AppBAdditionalSSN', null, null);
AppBAdditionalSSN.addChildElement('AppBDOBSSNAdditional', null, null);
AppBAdditionalSSN.addChildElement('DfSSNUnmasked_3', null, null);
AvokaSmartForm.addChildElement('AppBDOBAllocatedPercentageAdditionalPerson', null, null);
dom.XmlNode AppBAdditionalDOBAddress=AvokaSmartForm.addChildElement('AppBAdditionalDOBAddress', null, null);
dom.XmlNode AppBAdditionalDOBAddressPlease=AppBAdditionalDOBAddress.addChildElement('Please', null, null);
dom.XmlNode AppBAdditionalDOBAddressInput=AppBAdditionalDOBAddressPlease.addChildElement('Input', null, null);
dom.XmlNode AppBAdditionalDOBAddressThe=AppBAdditionalDOBAddressInput.addChildElement('The', null, null);
AppBAdditionalDOBAddressThe.addChildElement('Address_4', null, null);
AppBAdditionalDOBAddress.addChildElement('Checkbox_4', null, null);
AppBAdditionalDOBAddress.addChildElement('AppBAdditionalAddr1', null, null);
AppBAdditionalDOBAddress.addChildElement('AppBAdditionalAddr2', null, null);
AppBAdditionalDOBAddress.addChildElement('AppBAdditionalCity', null, null);
AppBAdditionalDOBAddress.addChildElement('AppBAdditionalState', null, null);
AppBAdditionalDOBAddress.addChildElement('AppBAdditionalZipCode', null, null);
dom.XmlNode AppBAdditionalDOBAddressIs=AppBAdditionalDOBAddress.addChildElement('Is', null, null);
dom.XmlNode AppBAdditionalDOBAddressManual=AppBAdditionalDOBAddressIs.addChildElement('Manual', null, null);
AppBAdditionalDOBAddressManual.addChildElement('Input_4', null, null);
dom.XmlNode AppBAdditionalDOBAddressFull=AppBAdditionalDOBAddress.addChildElement('Full', null, null);
AppBAdditionalDOBAddressFull.addChildElement('Address_4', null, null);
AvokaSmartForm.addChildElement('AppBDOBGenderAdditional', null, null);
AvokaSmartForm.addChildElement('DfAppAPrimaryBenDOB', null, null);
AvokaSmartForm.addChildElement('DfAppBPrimaryBenDOB', null, null);
AvokaSmartForm.addChildElement('DfAppAAddlBenDOB', null, null);
AvokaSmartForm.addChildElement('DfAppBAddlBenDOB', null, null);
AvokaSmartForm.addChildElement('DfAppASelectedPrefixPAUL', null, null);
AvokaSmartForm.addChildElement('DfAppBSelectedPrefixPAUL', null, null);
AvokaSmartForm.addChildElement('YnAppACIA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('YnAppBCIA', null, null);
dom.XmlNode SpnlAppACIACheck=AvokaSmartForm.addChildElement('SpnlAppACIACheck', null, null);
SpnlAppACIACheck.addChildElement('AppACIAAmount', null, null);
dom.XmlNode SpnlAppBCIACheck=AvokaSmartForm.addChildElement('SpnlAppBCIACheck', null, null);
SpnlAppBCIACheck.addChildElement('AppBCIAAmount', null, null);
AvokaSmartForm.addChildElement('YnAppPayPremium', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('YnAppBPayPremiums', null, null);
AvokaSmartForm.addChildElement('SameAsACheck', null, null);
dom.XmlNode SpnlAppAEFTInfo=AvokaSmartForm.addChildElement('SpnlAppAEFTInfo', null, null);
SpnlAppAEFTInfo.addChildElement('AppABankRouting', null, null);
SpnlAppAEFTInfo.addChildElement('AppABankAccountNumber', null, null);
dom.XmlNode SpnlAppBEFTInfo=AvokaSmartForm.addChildElement('SpnlAppBEFTInfo', null, null);
SpnlAppBEFTInfo.addChildElement('AppBBankRouting', null, null);
SpnlAppBEFTInfo.addChildElement('AppBBankAccountNumber', null, null);
AvokaSmartForm.addChildElement('DfAppAEnteredCIA', null, null);
AvokaSmartForm.addChildElement('DfAppBEnteredCIA', null, null);
AvokaSmartForm.addChildElement('MarketingAuthAgreementAppA', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('MarketingAuthAgreementAppB', null, null);
AvokaSmartForm.addChildElement('ApplicantAcknowledgementNYPAppAPart1', null, null);
AvokaSmartForm.addChildElement('IHaveOfferedTheApplicantAppAPart2', null, null);
AvokaSmartForm.addChildElement('YnReceiptNYPAppA', null, null);
AvokaSmartForm.addChildElement('YnReceiptINPAppA', null, null);
AvokaSmartForm.addChildElement('YnDoesEverythingLookCorrectAppA', null, null).addTextNode('Yes');
    AvokaSmartForm.addChildElement('ClickBoxToAttestAppA', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('AgentAttestCheckboxAppA', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('AgentAttestAgentQualificationAppA', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('DfAppAPolicyNumber', null, null).addTextNode('PGA1079485');
    AvokaSmartForm.addChildElement('DfAppBPolicyNumber', null, null).addTextNode('LGA1079485');
    AvokaSmartForm.addChildElement('DfRefCode', null, null).addTextNode('MCR9JH');
    AvokaSmartForm.addChildElement('ApplicantAcknowledgementNYPAppBPart1', null, null);
AvokaSmartForm.addChildElement('IHaveOfferedTheApplicantAppBPart2', null, null);
AvokaSmartForm.addChildElement('YnReceiptNYPAppB', null, null);
AvokaSmartForm.addChildElement('YnReceiptINPAppB', null, null);
AvokaSmartForm.addChildElement('YnDoesEverythingLookCorrectAppB', null, null);
AvokaSmartForm.addChildElement('ClickBoxToAttestAppB', null, null);
AvokaSmartForm.addChildElement('AgentAttestCheckboxAppB', null, null);
AvokaSmartForm.addChildElement('AgentAttestAgentQualificationAppB', null, null);
AvokaSmartForm.addChildElement('YnActiveConversationCurrentlyAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('HowDoYouWantToProceedAppA', null, null);
AvokaSmartForm.addChildElement('YnReadyToeSignAppA', null, null);
AvokaSmartForm.addChildElement('YnDLNeededtoeSignAppA', null, null);
AvokaSmartForm.addChildElement('StateIDDriverslicensenumberGLICAppA', null, null);
AvokaSmartForm.addChildElement('StateofIssueAppA', null, null);
dom.XmlNode ApplicantADIV=AvokaSmartForm.addChildElement('ApplicantADIV', null, null);
ApplicantADIV.addChildElement('AppANowInControl', null, null);
dom.XmlNode ApplicantADIVSignHere=ApplicantADIV.addChildElement('SignHere', null, null);
dom.XmlNode ApplicantADIVDocuSign=ApplicantADIVSignHere.addChildElement('DocuSign', null, null);
ApplicantADIVDocuSign.addChildElement('order', null, null).addTextNode('1');
                ApplicantADIVDocuSign.addChildElement('Title', null, null).addTextNode('Sign here');
                ApplicantADIVDocuSign.addChildElement('name', null, null).addTextNode('Testfn Testln');
                ApplicantADIVDocuSign.addChildElement('email', null, null).addTextNode('test@test.com');
                ApplicantADIVDocuSign.addChildElement('nametag', null, null).addTextNode('__n1__');
                ApplicantADIVDocuSign.addChildElement('signaturetag', null, null).addTextNode('__s1__');
                ApplicantADIVDocuSign.addChildElement('datetag', null, null).addTextNode('__d1__');
            
        ApplicantADIV.addChildElement('IframeAppADocSign', null, null);
dom.XmlNode AgentADIV=AvokaSmartForm.addChildElement('AgentADIV', null, null);
AgentADIV.addChildElement('AgentAAttestCheckbox', null, null);
dom.XmlNode AgentADIVSignHere=AgentADIV.addChildElement('SignHere', null, null);
dom.XmlNode AgentADIVDocuSign=AgentADIVSignHere.addChildElement('DocuSign', null, null);
AgentADIVDocuSign.addChildElement('order', null, null).addTextNode('2');
                AgentADIVDocuSign.addChildElement('Title', null, null).addTextNode('Sign here');
                AgentADIVDocuSign.addChildElement('name', null, null).addTextNode('James Dustin James Dustin');
                AgentADIVDocuSign.addChildElement('email', null, null).addTextNode('divya.anandpara@genworth.com');
                AgentADIVDocuSign.addChildElement('nametag', null, null).addTextNode('__n2__');
                AgentADIVDocuSign.addChildElement('signaturetag', null, null).addTextNode('__s2__');
                AgentADIVDocuSign.addChildElement('datetag', null, null).addTextNode('__d2__');
            
    AvokaSmartForm.addChildElement('YnEmailForSignatureAppA', null, null).addTextNode('No');
    AvokaSmartForm.addChildElement('AppAEmailAddress', null, null);
AvokaSmartForm.addChildElement('AgentAEmail', null, null);
AvokaSmartForm.addChildElement('EMMGNWLTCAppsgenworthcomAppA', null, null);
AvokaSmartForm.addChildElement('EnvelopeIDAppA', null, null);
AvokaSmartForm.addChildElement('IsAppSignedAppA', null, null);
AvokaSmartForm.addChildElement('DfClickToSignBailFlagA', null, null);
AvokaSmartForm.addChildElement('DfAppASignCode', null, null).addTextNode('Wet');
    AvokaSmartForm.addChildElement('DfRetryFlagA', null, null);
AvokaSmartForm.addChildElement('DfAppAClickToSignSuccessful', null, null);
AvokaSmartForm.addChildElement('DfAppASignStatus', null, null).addTextNode('INITIAL');
    AvokaSmartForm.addChildElement('DfNavLockFlag', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('DfLocalControlsLockFlagA', null, null).addTextNode('false');
    AvokaSmartForm.addChildElement('DfAllowContinueFlag', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('DfRetryCountA', null, null);
AvokaSmartForm.addChildElement('DfAppAPrintClicked', null, null).addTextNode('true');
    AvokaSmartForm.addChildElement('YnActiveConversationCurrentlyAppB', null, null);
AvokaSmartForm.addChildElement('HowDoYouWantToProceedAppB', null, null);
AvokaSmartForm.addChildElement('YnAreyoureadytoeSignnowAppB', null, null);
AvokaSmartForm.addChildElement('YnDLNeededtoeSignAppB', null, null);
AvokaSmartForm.addChildElement('StateIDDriversLicenseNumberGLICAppB', null, null);
AvokaSmartForm.addChildElement('StateofIssueAppB', null, null);
dom.XmlNode ApplicantBDIV=AvokaSmartForm.addChildElement('ApplicantBDIV', null, null);
ApplicantBDIV.addChildElement('AppBNowInControl', null, null);
dom.XmlNode ApplicantBDIVSignHereAppB=ApplicantBDIV.addChildElement('SignHereAppB', null, null);
dom.XmlNode ApplicantBDIVDocuSign=ApplicantBDIV.addChildElement('DocuSign', null, null);
ApplicantBDIVDocuSign.addChildElement('order', null, null);
ApplicantBDIVDocuSign.addChildElement('Title', null, null);
ApplicantBDIVDocuSign.addChildElement('name', null, null);
ApplicantBDIVDocuSign.addChildElement('email', null, null);
ApplicantBDIVDocuSign.addChildElement('nametag', null, null);
ApplicantBDIVDocuSign.addChildElement('signaturetag', null, null);
ApplicantBDIVDocuSign.addChildElement('datetag', null, null);
ApplicantBDIV.addChildElement('IframeAppBDocSign', null, null);
dom.XmlNode AgentBDIV=AvokaSmartForm.addChildElement('AgentBDIV', null, null);
AgentBDIV.addChildElement('AgentBAttestCheckbox', null, null);
dom.XmlNode AgentBDIVSignHereAppB=AgentBDIV.addChildElement('SignHereAppB', null, null);
dom.XmlNode AgentBDIVDocuSign=AgentBDIV.addChildElement('DocuSign', null, null);
AgentBDIVDocuSign.addChildElement('order', null, null);
AgentBDIVDocuSign.addChildElement('Title_1', null, null);
AgentBDIVDocuSign.addChildElement('name', null, null);
AgentBDIVDocuSign.addChildElement('email', null, null);
AgentBDIVDocuSign.addChildElement('nametag', null, null);
AgentBDIVDocuSign.addChildElement('signaturetag', null, null);
AgentBDIVDocuSign.addChildElement('datetag', null, null);
AvokaSmartForm.addChildElement('YnDoyouwanteMailforsignature', null, null);
AvokaSmartForm.addChildElement('AppBEmailAddress', null, null);
AvokaSmartForm.addChildElement('AgentNamesemailaddress', null, null);
AvokaSmartForm.addChildElement('EMMGNWLTCAppsgenworthcomAppB', null, null);
AvokaSmartForm.addChildElement('EnvelopeIDAppB', null, null);
AvokaSmartForm.addChildElement('IsAppSignedAppB', null, null);
AvokaSmartForm.addChildElement('DfClickToSignBailFlagB', null, null);
AvokaSmartForm.addChildElement('DfAppBSignCode', null, null);
AvokaSmartForm.addChildElement('DfRetryFlagB', null, null);
AvokaSmartForm.addChildElement('DfAppBClickToSignSuccessful', null, null);
AvokaSmartForm.addChildElement('DfAppBSignStatus', null, null);
AvokaSmartForm.addChildElement('DfLocalControlsLockFlagB', null, null);
AvokaSmartForm.addChildElement('DfRetryCountB', null, null);
AvokaSmartForm.addChildElement('DfAppBPrintClicked', null, null);
AvokaSmartForm.addChildElement('AcuityHTMLB', null, null);
dom.XmlNode Index=AvokaSmartForm.addChildElement('Index', null, null);
Index.addChildElement('ANNFIRSTNAME', null, null);
Index.addChildElement('ANNLASTNAME', null, null);
Index.addChildElement('ANNDOB', null, null);
Index.addChildElement('ANNSSN', null, null);
Index.addChildElement('INSFIRSTNAME', null, null).addTextNode('Testfn');
        Index.addChildElement('INSLASTNAME', null, null).addTextNode('Testln');
        Index.addChildElement('INSDOB', null, null).addTextNode('1973-06-13');
        Index.addChildElement('INSSSN', null, null).addTextNode('*****9999');
        Index.addChildElement('OWNFIRSTNAME', null, null);
Index.addChildElement('OWNLASTNAME', null, null);
Index.addChildElement('OWNDOB', null, null);
Index.addChildElement('OWNSSN', null, null);
Index.addChildElement('POL_NUMBER', null, null);
Index.addChildElement('POL_PREFIX', null, null);
Index.addChildElement('POL_SUFFIX', null, null);
Index.addChildElement('ENTITY', null, null).addTextNode('GLIC');
        Index.addChildElement('EXTCOMPANY', null, null).addTextNode('AVOKA');
        Index.addChildElement('docClass', null, null).addTextNode('CONV_FILES_001');
        Index.addChildElement('BACKFILEFLAG', null, null).addTextNode('N');
        Index.addChildElement('Requestor', null, null).addTextNode('Avoka');
        Index.addChildElement('responseRequired', null, null).addTextNode('N');
        Index.addChildElement('SIPSID', null, null).addTextNode('MCR9JH');
        Index.addChildElement('SHRDNUMBER', null, null).addTextNode('MCR9JHPGA1079485');
        Index.addChildElement('TXNTYPE', null, null);
Index.addChildElement('POLNUMBER', null, null).addTextNode('PGA1079485');
    AvokaSmartForm.addChildElement('TextField_7', null, null);
AvokaSmartForm.addChildElement('TextField_8', null, null);
AvokaSmartForm.addChildElement('SurveyContainer', null, null);
AvokaSmartForm.addChildElement('AppAprefix', null, null);
AvokaSmartForm.addChildElement('AppAotherdetail', null, null);
AvokaSmartForm.addChildElement('AppBPrefixOtherDetails', null, null);
dom.XmlNode Suburb1=AvokaSmartForm.addChildElement('Suburb', null, null);
Suburb1.addChildElement('City_11', null, null);
Suburb1.addChildElement('City_12', null, null);
dom.XmlNode State1=AvokaSmartForm.addChildElement('State', null, null);
State1.addChildElement('Province_11', null, null);
State1.addChildElement('Province_12', null, null);
dom.XmlNode Postcode1=AvokaSmartForm.addChildElement('Postcode', null, null);
Postcode1.addChildElement('Zipcode_11', null, null);
Postcode1.addChildElement('Zipcode_12', null, null);
AvokaSmartForm.addChildElement('Country_11', null, null);
AvokaSmartForm.addChildElement('Country_12', null, null);
AvokaSmartForm.addChildElement('CouldYouAffordToKeep', null, null);
AvokaSmartForm.addChildElement('CouldYouAffordToKeepSD', null, null);
dom.XmlNode Prefix=AvokaSmartForm.addChildElement('Prefix', null, null);
Prefix.addChildElement('TextName', null, null);
AvokaSmartForm.addChildElement('Otherdetails', null, null);
AvokaSmartForm.addChildElement('AppAPrefixDetailsPAUL', null, null);
AvokaSmartForm.addChildElement('MiddleInitial', null, null);
AvokaSmartForm.addChildElement('AppBPrefixDetailsPAUL', null, null);
AvokaSmartForm.addChildElement('AppABeneficiaryPrefix', null, null);
AvokaSmartForm.addChildElement('AppAAdditionalBeneficiaryPrefix', null, null);
AvokaSmartForm.addChildElement('AppBBeneficiaryPrefix', null, null);
AvokaSmartForm.addChildElement('AppBAdditionalBeneficiaryPrefix', null, null);
dom.XmlNode SFMData=AvokaSmartForm.addChildElement('SFMData', null, null);
dom.XmlNode SystemProfile=SFMData.addChildElement('SystemProfile', null, null);
SystemProfile.addChildElement('FormCode', null, null).addTextNode('quote-and-apply');
            SystemProfile.addChildElement('TemplateVersionNumber', null, null).addTextNode('77.10');
            SystemProfile.addChildElement('UserName', null, null).addTextNode('ltc_dashstage_11');
            SystemProfile.addChildElement('UpdateUserProfile', null, null).addTextNode('false');
            SystemProfile.addChildElement('HostContext', null, null).addTextNode('Page');
            SystemProfile.addChildElement('SubmissionType', null, null).addTextNode('Submitted');
            SystemProfile.addChildElement('OnlineSaveEnabledFlag', null, null).addTextNode('true');
            SystemProfile.addChildElement('RequestLogKey', null, null).addTextNode('82030b84a875f7bc247cc8770f3d5f8f');
            SystemProfile.addChildElement('TestMode', null, null).addTextNode('false');
            SystemProfile.addChildElement('SubmissionNumber', null, null);
SystemProfile.addChildElement('DisplayMode', null, null).addTextNode('Entry');
            SystemProfile.addChildElement('ShareForm', null, null);
SystemProfile.addChildElement('ComposerDataVersion', null, null).addTextNode('17.10.16');
            SystemProfile.addChildElement('ServerBuildNumber', null, null).addTextNode('18.11.4');
            SystemProfile.addChildElement('RevisionNumber', null, null).addTextNode('18');
            SystemProfile.addChildElement('FormDataServiceURL', null, null).addTextNode('https://staging.genworth.transactcentral.com/genworth/servlet/FormDynamicDataServlet');
            SystemProfile.addChildElement('OfflineSubmissionId', null, null).addTextNode('9a9af67cd0ffd548195b1b968dd390c4');
            SystemProfile.addChildElement('TrackingCode', null, null).addTextNode('MCR9JH');
            dom.XmlNode Insights=SystemProfile.addChildElement('Insights', null, null);
Insights.addChildElement('Endpoint', null, null).addTextNode('https://eventconsumer-dot-transact-insights.appspot.com/_ah/api');
                Insights.addChildElement('Enabled', null, null).addTextNode('true');
                Insights.addChildElement('AddressHash', null, null).addTextNode('bb0c9bf3c0df70f0178f1507d3ee5e5f664bcf52b9825dcf4b2a23f6b2ddc183');
                Insights.addChildElement('RequestUrl', null, null).addTextNode('https%3A%2F%2Fstaging.genworth.transactcentral.com%2Fgenworth%2Fsecure%2Fservlet%2FSmartForm.html%3FformCode%3Dquote-and-apply%26tmFormVersion%3D77.10');
                Insights.addChildElement('AccessToken', null, null).addTextNode('eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpbnNpZ2h0cy5hdm9rYS5jb20vRm9ybVJlcXVlc3QiOnsicmVxdWVzdEtleSI6bnVsbCwiY3VzdG9tZXJJZCI6IkdlbndvcnRoIiwidG1JbnN0YW5jZUlkIjoiYzhlMTBhOTc5ZmQ5NjcyZGExNDNjNzkwZTU3ZTJkMjUiLCJvcmdJZCI6Mywic3BhY2VJZCI6NSwiZm9ybUlkIjoxNDIsImZvcm1WZXJzaW9uSWQiOjc3OSwiZm9ybVRyYW5zYWN0aW9uSWQiOjg3OTU1NSwic2Vzc2lvbklkIjo4OTg1OTgsImpvYklkIjotMSwiam9iU3RlcElkIjotMSwiam9iQWN0aW9uSWQiOi0xfSwiZXhwIjoxNjczNjI4NDMyLCJpYXQiOjE2NzM0NTU2MzJ9.D0txLaruF5uxD-rp3f5waR049GcbiKRn7ZDeBezNGjw');
                Insights.addChildElement('StartTime', null, null).addTextNode('1673455632024');
            SystemProfile.addChildElement('LastSavedPageIndex', null, null).addTextNode('21');
            SystemProfile.addChildElement('ReceiptNumber', null, null).addTextNode('MCR9JH');
        //System.debug(doc.toXmlString());
        return doc.toXmlString();

    }
}